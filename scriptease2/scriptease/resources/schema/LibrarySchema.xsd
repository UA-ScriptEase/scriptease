<!-- This is the schema for describing Library Model files. Everything uses 
	'sequences' because order matters in reading. -->
<xsd:schema attributeFormDefault="unqualified"
	elementFormDefault="qualified" version="1.0"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema">
	<xsd:include schemaLocation="CodeElementSchema.xsd" />

	<xsd:complexType name="AttrElement">
		<xsd:simpleContent>
			<xsd:extension base="xsd:string">
				<xsd:attribute name="value" type="xsd:string">
				</xsd:attribute>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>

	<!-- Start with the overall file type -->
	<xsd:element name="LibraryModel" type="LibraryModel_Type" />

	<!-- Defines an api Dictionary file -->
	<xsd:complexType name="LibraryModel_Type">
		<xsd:sequence>
			<xsd:element name="IncludeFiles">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="IncludeFile" type="xsd:string"
							maxOccurs="unbounded" minOccurs="0" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="Types" type="TypeList_Type" />
			<xsd:element name="Slots" type="SlotList_Type" />
			<xsd:element name="Causes" type="CauseList_Type" />
			<xsd:element name="Effects" type="EffectList_Type" />
			<xsd:element name="DescribeIts" type="DescribeItList_Type" />
			<xsd:element name="ControlIts" type="ControlItList_Type" />
			<xsd:element name="ActivityIts" type="ActivityList_Type" />
			<xsd:element name="Behaviours" type="BehaviourList_Type" />
			<xsd:element name="TypeConverters" type="TypeConverterList_Type" />
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:string" use="required" />
		<xsd:attribute name="author" type="xsd:string" use="required" />
		<xsd:attribute name="description" type="xsd:string" use="required" />
		<xsd:attribute name="readonly" type="xsd:boolean" use="required" />
	</xsd:complexType>

	<!-- Defines a list of game Type definitions -->
	<xsd:complexType name="TypeList_Type">
		<xsd:sequence>
			<xsd:element name="Type" type="Type_Type" maxOccurs="unbounded"
				minOccurs="0" />
		</xsd:sequence>
	</xsd:complexType>

	<!-- Defines a list of Slot definitions -->
	<xsd:complexType name="SlotList_Type">
		<xsd:sequence>
			<xsd:element name="Slot" type="Slot_Type" maxOccurs="unbounded"
				minOccurs="0" />
		</xsd:sequence>
		<xsd:attribute name="defaultFormat" type="xsd:string"
			use="required" />
	</xsd:complexType>

	<!-- Defines a list of Cause (CauseIt) definitions -->
	<xsd:complexType name="CauseList_Type">
		<xsd:sequence>
			<xsd:element name="CauseIt" type="CauseIt_Type"
				maxOccurs="unbounded" minOccurs="0" />
		</xsd:sequence>
	</xsd:complexType>

	<!-- Defines a list of Effect (ScriptIt) definitions -->
	<xsd:complexType name="EffectList_Type">
		<xsd:sequence>
			<xsd:element name="ScriptIt" type="ScriptIt_Type"
				maxOccurs="unbounded" minOccurs="0" />
		</xsd:sequence>
	</xsd:complexType>

	<!-- Defines a list of Behaviours (Behaviour) definitions -->
	<xsd:complexType name="BehaviourList_Type">
		<xsd:sequence>
			<xsd:element name="Behaviour" type="Behaviour_Type"
				maxOccurs="unbounded" minOccurs="0" />
		</xsd:sequence>
	</xsd:complexType>
	
	<!-- Defines a list of Activitys (ActivityIt) definitions -->
	<xsd:complexType name="ActivityList_Type">
		<xsd:sequence>
			<xsd:element name="ActivityIt" type="ActivityIt_Type"
				maxOccurs="unbounded" minOccurs="0" />
		</xsd:sequence>
	</xsd:complexType>

	<!-- Defines a list of Controls (ControlIt) definitions -->
	<xsd:complexType name="ControlItList_Type">
		<xsd:sequence>
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="ControlIt"
				type="ControlIt_Type" />
		</xsd:sequence>
	</xsd:complexType>

	<!-- Defines a list of KnowIts to be used as descriptions definitions -->
	<xsd:complexType name="DescriptionList_Type">
		<xsd:sequence>
			<xsd:element maxOccurs="unbounded" name="KnowIt" type="KnowIt_Type" />
		</xsd:sequence>
	</xsd:complexType>

	<!-- Defines a list of DescribeIt definitions -->
	<xsd:complexType name="DescribeItList_Type">
		<xsd:sequence>
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="DescribeIt"
				type="DescribeIt_Type" />
		</xsd:sequence>
	</xsd:complexType>

	<!-- Defines a list of TypeConverter definitions -->
	<xsd:complexType name="TypeConverterList_Type">
		<xsd:sequence>
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="ScriptIt"
				type="ScriptIt_Type" />
		</xsd:sequence>
	</xsd:complexType>

	<!-- Defines a game Type -->
	<xsd:complexType name="Type_Type">
		<xsd:sequence>
			<xsd:element name="Name" type="xsd:string" />
			<xsd:element name="CodeSymbol" type="xsd:string" />
			<xsd:element name="Format" type="Format_Type" minOccurs="0" />
			<xsd:choice minOccurs="0">
				<xsd:element name="LegalValues" type="xsd:string" />
				<xsd:element name="Enum" type="xsd:string" />
			</xsd:choice>
			<xsd:element name="GUI" type="xsd:string" minOccurs="0" />
			<xsd:element name="Slots" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="Slot" type="xsd:string" maxOccurs="unbounded" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="WidgetName" type="xsd:string"
				minOccurs="0" />
			<xsd:element name="Escapes" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="Escape" type="AttrElement"
							maxOccurs="unbounded" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>

	<!-- Defines a game Slot -->
	<xsd:complexType name="Slot_Type">
		<xsd:sequence>
			<xsd:element name="Name" type="xsd:string" />
			<xsd:element name="Keyword" type="xsd:string" />
			<xsd:element name="Condition" type="xsd:string"
				minOccurs="0" />
			<xsd:element name="Parameters" type="ParameterList_Type" />
			<xsd:element name="Implicits">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="KnowIt" type="KnowIt_Type"
							minOccurs="0" maxOccurs="unbounded" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="format" type="xsd:string" use="optional" />
	</xsd:complexType>

	<!-- =============================== -->
	<!-- STORYCOMPONENT TYPE DEFINITIONS -->
	<!-- =============================== -->

	<!-- Defines the set of data that all StoryComponents have -->
	<xsd:group name="StoryComponentDataGroup">
		<xsd:sequence>
			<xsd:element name="Name" type="xsd:string" />
			<xsd:element name="Description" type="xsd:string" minOccurs="0" />
			<xsd:element name="Visible" type="xsd:boolean" minOccurs="0" />
			<xsd:element name="Enabled" type="xsd:boolean" minOccurs="0" />
			<xsd:element name="Labels">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="Label" type="xsd:string" maxOccurs="unbounded"
							minOccurs="0" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:group>

	<!-- Defines a ScriptIt -->
	<xsd:complexType name="ScriptIt_Type">
		<xsd:sequence minOccurs="0">
			<xsd:group ref="StoryComponentDataGroup" />
			<xsd:element name="Children" />
			<xsd:element name="CodeBlocks" type="CodeBlockList_Type" />
		</xsd:sequence>
		<xsd:attribute name="library" type="xsd:string" use="optional" />
		<xsd:attribute name="id" type="xsd:string"/>
		<xsd:attribute name="reference" type="xsd:string" use="optional" />
	</xsd:complexType>

	<!-- Defines a CauseIt -->
	<xsd:complexType name="CauseIt_Type">
		<xsd:sequence minOccurs="0">
			<xsd:group ref="StoryComponentDataGroup" />
			<xsd:element name="Children" />
			<xsd:element name="CodeBlocks" type="CodeBlockList_Type" />
		</xsd:sequence>
	    <xsd:attribute name="library" type="xsd:string" use="optional" />
		<xsd:attribute name="id" type="xsd:string"/>
		<xsd:attribute name="reference" type="xsd:string" use="optional" />	
	</xsd:complexType>

	<!-- Defines a Behaviour -->
	<xsd:complexType name="Behaviour_Type">
		<xsd:sequence minOccurs="0">
			<xsd:group ref="StoryComponentDataGroup" />
			<xsd:element name="Children" />
			<xsd:element name="CodeBlocks" type="CodeBlockList_Type" />
			<xsd:element name="StartTask" />
		</xsd:sequence>
		<xsd:attribute name="type" use="required">
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:pattern value="INDEPENDENT|COLLABORATIVE" />
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="library" type="xsd:string" use="optional" />
		<xsd:attribute name="id" type="xsd:string"/>
		<xsd:attribute name="reference" type="xsd:string" use="optional" />
	</xsd:complexType>
	
	<!-- Defines a Activity -->
	<xsd:complexType name="ActivityIt_Type">
		<xsd:sequence minOccurs="0">
			<xsd:group ref="StoryComponentDataGroup" />
			<xsd:element name="Children" />
			<xsd:element name="CodeBlocks" type="CodeBlockList_Type" />
		</xsd:sequence>
		<xsd:attribute name="library" type="xsd:string" use="optional" />
		<xsd:attribute name="id" type="xsd:string"/>
		<xsd:attribute name="reference" type="xsd:string" use="optional" />
	</xsd:complexType>

	<!-- Defines a ControlIt -->
	<xsd:complexType name="ControlIt_Type">
		<xsd:sequence minOccurs="0">
			<xsd:group ref="StoryComponentDataGroup" />
			<xsd:element name="Children" type="StoryComponentList_Type" />
			<xsd:element name="CodeBlocks" type="CodeBlockList_Type" />
		</xsd:sequence>
		<xsd:attribute name="control" use="required">
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:pattern value="DELAY|QUESTION|REPEAT|BLOCK" />
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="library" type="xsd:string" use="optional" />
		<xsd:attribute name="id" type="xsd:string"/>
		<xsd:attribute name="reference" type="xsd:string" use="optional" />
	</xsd:complexType>

	<!-- Defines a StoryComponentContainer -->
	<xsd:complexType name="StoryComponentList_Type">
		<xsd:sequence minOccurs="0">
			<xsd:group ref="StoryComponentDataGroup" />
			<xsd:element name="Children" type="xsd:string" />
		</xsd:sequence>
	</xsd:complexType>

	<!-- Defines a StoryComponentContainer -->
	<xsd:complexType name="StoryComponentContainer_Type">
		<xsd:sequence minOccurs="0" maxOccurs="2">
			<xsd:group ref="StoryComponentDataGroup" />
			<!-- TODO Right now we can have anything in these. It's kind of insecure, 
				so change it to only accept story components (will have to be a new type 
				using xsd:choice -->
			<xsd:element name="Children" />
		</xsd:sequence>
	</xsd:complexType>

	<!-- Defines a Code Block Source -->
	<xsd:complexType name="CodeBlockSource_Type">
		<xsd:sequence minOccurs="0" maxOccurs="1">
			<xsd:group ref="StoryComponentDataGroup" />
			<xsd:element minOccurs="0" name="Subject" type="xsd:string" />
			<xsd:element minOccurs="0" name="Slot" type="xsd:string" />
			<xsd:element name="Types" type="SpecificTypeList_Type" />
			<xsd:element minOccurs="0" name="Parameters" type="ParameterList_Type" />
			<xsd:element minOccurs="0" name="Includes" type="IncludesList_Type" />
			<xsd:element name="Code" type="Code_Type" />
		</xsd:sequence>
		<xsd:attribute name="library" type="xsd:string" use="optional" />
		<xsd:attribute name="id" type="xsd:string"/>
		<xsd:attribute name="reference" type="xsd:string" use="optional" />
	</xsd:complexType>

	<!-- Defines a Code Block Reference -->
	<xsd:complexType name="CodeBlockReference_Type">
		<xsd:sequence minOccurs="0" maxOccurs="1">
			<xsd:group ref="StoryComponentDataGroup" />
			<xsd:element minOccurs="0" name="Parameters" type="ParameterList_Type" />
		</xsd:sequence>
		<xsd:attribute name="library" type="xsd:string" use="optional" />
		<xsd:attribute name="id" type="xsd:string"/>
		<xsd:attribute name="reference" type="xsd:string" use="optional" />
	</xsd:complexType>

	<xsd:complexType name="DescribeIt_Type">
		<xsd:sequence>
			<xsd:element name="Name" type="xsd:string" />
			<xsd:element name="Types" type="SpecificTypeList_Type" />
			<xsd:element name="DescribeItNode" type="DescribeItNode_Type" />
			<xsd:element name="PathMap" type="PathMap_Type" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="KnowIt_Type">
		<xsd:sequence minOccurs="0">
			<xsd:group ref="StoryComponentDataGroup" />
			<xsd:element name="Types" type="SpecificTypeList_Type" />
			<xsd:element name="Binding" type="Binding_Type"
				minOccurs="0" />
			<xsd:element name="DescribeIt" type="DescribeIt_Type"
				minOccurs="0" />
		</xsd:sequence>
		<xsd:attribute name="library" type="xsd:string" use="optional" />
		<xsd:attribute name="id" type="xsd:string"/>
		<xsd:attribute name="reference" type="xsd:string" use="optional" />
	</xsd:complexType>

	<!-- ================================= -->
	<!-- STORYCOMPONENT PIECES DEFINITIONS -->
	<!-- ================================= -->

	<!-- Defines a list of KnowIt parameters -->
	<xsd:complexType name="ParameterList_Type">
		<xsd:sequence>
			<xsd:element name="KnowIt" type="KnowIt_Type" maxOccurs="unbounded"
				minOccurs="0" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="ImplicitList_Type">
		<xsd:sequence>
			<xsd:element name="KnowIt" type="KnowIt_Type" maxOccurs="unbounded"
				minOccurs="0" />
		</xsd:sequence>
	</xsd:complexType>

	<!-- Defines a list of CodeBlocks -->
	<xsd:complexType name="CodeBlockList_Type">
		<xsd:choice>
			<xsd:sequence>
				<xsd:element name="CodeBlockReference" type="CodeBlockReference_Type"
					maxOccurs="unbounded" minOccurs="0" />
			</xsd:sequence>
			<xsd:sequence>
				<xsd:element name="CodeBlockSource" type="CodeBlockSource_Type"
					maxOccurs="unbounded" minOccurs="0" />
			</xsd:sequence>
		</xsd:choice>
	</xsd:complexType>

	<!-- Defines a list of StoryComponentContainers -->
	<xsd:complexType name="StoryComponentContainerList_Type">
		<xsd:choice>
			<xsd:sequence>
				<xsd:element name="StoryComponentContainer" type="StoryComponentContainer_Type"
					maxOccurs="unbounded" minOccurs="0" />
			</xsd:sequence>
		</xsd:choice>
	</xsd:complexType>

	<!-- Defines a list of Specific game Type keyword references each of these 
		keywords must be defined in the TypeList_Type block -->
	<xsd:complexType name="SpecificTypeList_Type">
		<xsd:sequence>
			<xsd:element name="Type" type="xsd:string" maxOccurs="unbounded"
				minOccurs="0" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="IncludesList_Type">
		<xsd:sequence>
			<xsd:element name="Include" type="xsd:string" maxOccurs="unbounded"
				minOccurs="0" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="ValidList_Type">
		<xsd:sequence>
			<xsd:element name="Value" type="xsd:string" maxOccurs="unbounded"
				minOccurs="0" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="Binding_Type">
		<xsd:choice minOccurs="0">
			<xsd:element name="ScriptIt" type="ScriptIt_Type" />
			<xsd:element name="KnowIt" type="KnowIt_Type" />
			<!-- This is for the run time flavour -->
			<xsd:element name="Types" type="SpecificTypeList_Type" />
			<!-- This is for constants + resources -->
			<xsd:sequence>
				<xsd:element name="Type" type="xsd:string" />
				<xsd:element name="Value" type="xsd:string" />
			</xsd:sequence>
		</xsd:choice>
		<xsd:attribute name="flavour" use="required">
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:pattern value="constant|resource|function|reference|null|automatic|uninitialized" />
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<!-- bindings don't get the XStream "reference" attribute because they 
			aren't meant to be shared. They should be cloning all the time. - remiller -->
	</xsd:complexType>

	<!-- represents a group of DescribeItNodes -->
	<xsd:group name="DescribeItNode_Group">
		<xsd:choice>
			<xsd:element name="DescribeItNode" type="DescribeItNode_Type" />
		</xsd:choice>
	</xsd:group>

	<!-- Represents a DescribeItNode - either full or reference -->
	<xsd:complexType name="DescribeItNode_Type">
		<xsd:sequence>
			<xsd:element name="Name" type="xsd:string" minOccurs="0" />
			<xsd:element name="KnowIt" type="KnowIt_Type" minOccurs="0" />
			<xsd:element name="Successors" type="DescribeItNodeList_Type"
				minOccurs="0" />
		</xsd:sequence>
		<xsd:attribute name="reference" type="xsd:string" />
	</xsd:complexType>

	<xsd:complexType name="PathMap_Type">
		<xsd:sequence>
			<xsd:element name="Entry" type="PathMapEntry_Type"
				minOccurs="0" maxOccurs="unbounded" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="PathMapEntry_Type">
		<xsd:sequence>
			<xsd:element name="Path" type="DescribeItNodeList_Type" />
			<xsd:element name="ScriptIt" type="ScriptIt_Type" />
		</xsd:sequence>
	</xsd:complexType>

	<!-- List of DescribeItNodes, which are either TextNodes or KnowItNodes -->
	<xsd:complexType name="DescribeItNodeList_Type">
		<xsd:sequence maxOccurs="unbounded">
			<xsd:element name="DescribeItNode" type="DescribeItNode_Type"
				minOccurs="0" />
		</xsd:sequence>
	</xsd:complexType>
</xsd:schema>