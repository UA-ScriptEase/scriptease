<LibraryModel name="A* Pathfinding Library" author="ScriptEase Team">
  <IncludeFiles>
    <IncludeFile>SEPath.js</IncludeFile>
  </IncludeFiles>
  <Types/>
  <Slots defaultFormat="SECause">
    <Slot format="UnityCause">
      <Name>TargetReached</Name>
      <Keyword>TargetReached</Keyword>
      <Condition>Start</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
  </Slots>
  <Causes>
    <CauseIt>
      <Name>When &lt;subject&gt; reaches its target</Name>
      <Visible>true</Visible>
      <Labels>
        <Label>A*</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When &lt;subject&gt; reaches its target</Name>
          <Visible>true</Visible>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>TargetReached</Slot>
          <Id>15</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Includes>
            <Include></Include>
          </Includes>
          <Code>
            <Line>
              <Literal>SEPath.GetPath(</Literal>
              <Scope data="ARGUMENT" ref="subject">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).setOnTargetReached(function(){</Literal>
            </Line>
            <Indent>
              <FormatRef data="NONE" ref="children"/>
            </Indent>
            <Line>
              <Literal>});</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
  </Causes>
  <Effects>
    <ScriptIt>
      <Name>&lt;Object&gt; walks a path to &lt;Target&gt;</Name>
      <Visible>true</Visible>
      <Labels>
        
        <Label>A*</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Object&gt; walks a path to &lt;Target&gt;</Name>
          <Visible>true</Visible>
          <Labels/>
          <Id>2</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Target</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>var sePath : SEPath = SEPath.GetPath(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
            <Line>
              <Literal>sePath.canMove = true;</Literal>
            </Line>
            <Line>
              <Literal>sePath.canSearch = true;</Literal>
            </Line>
            <Line>
              <Literal>sePath.target = </Literal>
              <Scope data="ARGUMENT" ref="Target">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.transform;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Object&gt; walks at a speed of &lt;Speed&gt;</Name>
      <Visible>true</Visible>
      <Labels>
        
        <Label>A*</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Object&gt; walks at a speed of &lt;Speed&gt;</Name>
          <Visible>true</Visible>
          <Labels/>
          <Id>3</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Speed</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEPath.GetPath(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).speed = </Literal>
              <Scope data="ARGUMENT" ref="Speed">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Object&gt; attempts to find its path again</Name>
      <Visible>true</Visible>
      <Labels>
        
        <Label>A*</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Object&gt; attempts to find its path again</Name>
          <Visible>true</Visible>
          <Labels/>
          <Id>5</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEPath.GetPath(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).StartCoroutine(RepeatTrySearchPath());</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Object&gt; reaches its target when it is &lt;Unit&gt; units away from the target</Name>
      <Visible>true</Visible>
      <Labels>
        
        <Label>A*</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Object&gt; reaches its target when it is &lt;Unit&gt; units away from the target</Name>
          <Visible>true</Visible>
          <Labels/>
          <Id>6</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Unit</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEPath.GetPath(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).endReachedDistance = </Literal>
              <Scope data="ARGUMENT" ref="Unit">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Object&gt; looks for a new path to its target at a rate of &lt;Rate&gt;</Name>
      <Visible>true</Visible>
      <Labels>
        
        <Label>A*</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Object&gt; looks for a new path to its target at a rate of &lt;Rate&gt;</Name>
          <Visible>true</Visible>
          <Labels/>
          <Id>7</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Rate</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEPath.GetPath(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).repathRate = </Literal>
              <Scope data="ARGUMENT" ref="Rate">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Allow&gt; &lt;Object&gt; to look for a new path to its target</Name>
      <Visible>true</Visible>
      <Labels>
        
        <Label>A*</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Allow&gt; &lt;Object&gt; to look for a new path to its target</Name>
          <Visible>true</Visible>
          <Labels/>
          <Id>8</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Allow</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>AllowDisallow</Type>
              </Types>
              <Binding flavour="constant">
                <Type>AllowDisallow</Type>
                <Value>true</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEPath.GetPath(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).canSearch = </Literal>
              <Scope data="ARGUMENT" ref="Allow">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Allow&gt; &lt;Object&gt; to move to its target</Name>
      <Visible>true</Visible>
      <Labels>
        
        <Label>A*</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Allow&gt; &lt;Object&gt; to move to its target</Name>
          <Visible>true</Visible>
          <Labels/>
          <Id>9</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Allow</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>AllowDisallow</Type>
              </Types>
              <Binding flavour="constant">
                <Type>AllowDisallow</Type>
                <Value>true</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEPath.GetPath(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).canMove = </Literal>
              <Scope data="ARGUMENT" ref="Allow">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Object&gt; turns at a speed of &lt;Speed&gt;</Name>
      <Visible>true</Visible>
      <Labels>
        
        <Label>A*</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Object&gt; turns at a speed of &lt;Speed&gt;</Name>
          <Visible>true</Visible>
          <Labels/>
          <Id>10</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Speed</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEPath.GetPath(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).turningSpeed = </Literal>
              <Scope data="ARGUMENT" ref="Speed">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Object&gt; starts to slow down when it is &lt;Distance&gt; units away from the target</Name>
      <Visible>true</Visible>
      <Labels>
        
        <Label>A*</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Object&gt; starts to slow down when it is &lt;Distance&gt; units away from the target</Name>
          <Visible>true</Visible>
          <Labels/>
          <Id>11</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Distance</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEPath.GetPath(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).slowdownDistance = </Literal>
              <Scope data="ARGUMENT" ref="Distance">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Object&gt; switches to a new target when it is &lt;Distance&gt; units from its current target</Name>
      <Visible>true</Visible>
      <Labels>
        
        <Label>A*</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Object&gt; switches to a new target when it is &lt;Distance&gt; units from its current target</Name>
          <Visible>true</Visible>
          <Labels/>
          <Id>12</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Distance</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEPath.GetPath(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).pickNextWaypointDist = </Literal>
              <Scope data="ARGUMENT" ref="Distance">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>if &lt;Object&gt; has reached its target</Name>
      <Visible>false</Visible>
      <Labels>
        <Label>A*</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>if &lt;Object&gt; has reached its target</Name>
          <Visible>true</Visible>
          <Labels/>
          <Id>13</Id>
          <Types>
            <Type>question</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return SEPath.GetPath(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).TargetReached;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Object&gt;&apos;s walking speed</Name>
      <Visible>false</Visible>
      <Labels>
        <Label>A*</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Object&gt;&apos;s walking speed</Name>
          <Visible>true</Visible>
          <Labels/>
          <Id>16</Id>
          <Types>
            <Type>float</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return SEPath.GetPath(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).speed;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Object&gt; loses its target</Name>
      <Visible>true</Visible>
      <Labels>
        
        <Label>A*</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Object&gt; loses its target</Name>
          <Visible>true</Visible>
          <Labels/>
          <Id>17</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEPath.GetPath(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).target = null;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Object&gt;&apos;s turning speed</Name>
      <Visible>false</Visible>
      <Labels>
        <Label>A*</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Object&gt;&apos;s turning speed</Name>
          <Visible>true</Visible>
          <Labels/>
          <Id>18</Id>
          <Types>
            <Type>float</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return SEPath.GetPath(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).turningSpeed;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>the target &lt;Object&gt; is walking to</Name>
      <Visible>false</Visible>
      <Labels>
        <Label>A*</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>the target &lt;Object&gt; is walking to</Name>
          <Visible>true</Visible>
          <Labels/>
          <Id>20</Id>
          <Types>
            <Type>GameObject</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return SEPath.GetPath(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).target.gameObject;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>the distance from &lt;Object&gt;&apos;s current target at which it switches to a new target</Name>
      <Visible>false</Visible>
      <Labels>
        <Label>A*</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>the distance from &lt;Object&gt;&apos;s current target at which it switches to a new target</Name>
          <Visible>true</Visible>
          <Labels/>
          <Id>21</Id>
          <Types>
            <Type>float</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return SEPath.GetPath(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).pickNextWaypointDist;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>the distance from &lt;Object&gt;&apos;s current target at which it starts to slow down</Name>
      <Visible>false</Visible>
      <Labels>
        <Label>A*</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>the distance from &lt;Object&gt;&apos;s current target at which it starts to slow down</Name>
          <Visible>true</Visible>
          <Labels/>
          <Id>22</Id>
          <Types>
            <Type>float</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return SEPath.GetPath(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).slowdownDistance;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>the percent of the next target distance that &lt;Object&gt; considers its target reached</Name>
      <Visible>false</Visible>
      <Labels>
        <Label>A*</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>the percent of the next target distance that &lt;Object&gt; considers its target reached</Name>
          <Visible>true</Visible>
          <Labels/>
          <Id>23</Id>
          <Types>
            <Type>float</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return SEPath.GetPath(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).endReachedDistance;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>the rate at which &lt;Object&gt; tries to find a new path</Name>
      <Visible>false</Visible>
      <Labels>
        <Label>A*</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>the rate at which &lt;Object&gt; tries to find a new path</Name>
          <Visible>true</Visible>
          <Labels/>
          <Id>24</Id>
          <Types>
            <Type>float</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return SEPath.GetPath(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).repathRate;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>whether &lt;Object&gt; is allowed to look for a new path to its target</Name>
      <Visible>false</Visible>
      <Labels>
        <Label>A*</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>whether &lt;Object&gt; is allowed to look for a new path to its target</Name>
          <Visible>true</Visible>
          <Labels/>
          <Id>25</Id>
          <Types>
            <Type>question</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return SEPath.GetPath(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).canSearch;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>whether &lt;Object&gt; is allowed to move to its target</Name>
      <Visible>false</Visible>
      <Labels>
        <Label>A*</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>whether &lt;Object&gt; is allowed to move to its target</Name>
          <Visible>true</Visible>
          <Labels/>
          <Id>26</Id>
          <Types>
            <Type>question</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return SEPath.GetPath(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).canMove;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Object&gt; looks forward &lt;Distance&gt; units for a path</Name>
      <Visible>true</Visible>
      <Labels>
        
        <Label>A*</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Object&gt; looks forward &lt;Distance&gt; units for a path</Name>
          <Visible>true</Visible>
          <Labels/>
          <Id>27</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Distance</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEPath.GetPath(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).forwardLook = </Literal>
              <Scope data="ARGUMENT" ref="Distance">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>the distance &lt;Object&gt; looks forward for a path</Name>
      <Visible>false</Visible>
      <Labels>
        <Label>A*</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>the distance &lt;Object&gt; looks forward for a path</Name>
          <Visible>true</Visible>
          <Labels/>
          <Id>28</Id>
          <Types>
            <Type>float</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return SEPath.GetPath(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).forwardLook;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[14]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[23]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[15]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[16]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[20]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[17]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[21]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[11]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[19]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[18]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[12]"/>
  </Effects>
  <DescribeIts>
    <DescribeIt>
      <Name>Look Distance</Name>
      <Types>
        <Type>float</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[23]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Target Reached</Name>
      <Types>
        <Type>question</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[2]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[11]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Find Path Rate</Name>
      <Types>
        <Type>float</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[3]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[19]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Can Move</Name>
      <Types>
        <Type>question</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[4]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[21]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Can Find Path</Name>
      <Types>
        <Type>question</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[5]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[20]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Switch Target Distance</Name>
      <Types>
        <Type>float</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[6]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[16]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Turn Speed</Name>
      <Types>
        <Type>float</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[7]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[14]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Target Reached Percent</Name>
      <Types>
        <Type>float</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[8]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[18]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Walk Speed</Name>
      <Types>
        <Type>float</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[9]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[12]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Slow Down Distance</Name>
      <Types>
        <Type>float</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[10]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[17]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Target</Name>
      <Types>
        <Type>GameObject</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[11]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[15]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
  </DescribeIts>
  <ControlIts/>
  <TypeConverters/>
</LibraryModel>