<LibraryModel name="DefaultUnityLibraryModel" author="ScriptEase Team">
  <IncludeFiles>
    <IncludeFile>includes/SEDialogue.js</IncludeFile>
    <IncludeFile>includes/SEFunctions.js</IncludeFile>
    <IncludeFile>includes/SEStory.js</IncludeFile>
    <IncludeFile>includes/SEVariable.js</IncludeFile>
    <IncludeFile>includes/SEGameObject.cs</IncludeFile>
  </IncludeFiles>
  <Types>
    <Type>
      <Name>GameObject</Name>
      <Keyword>GameObject</Keyword>
      <CodeSymbol>GameObject</CodeSymbol>
      <Slots>
        <Slot>MouseClicked</Slot>
      </Slots>
      <WidgetName>G</WidgetName>
    </Type>
    <Type>
      <Name>ShowHide</Name>
      <Keyword>ShowHide</Keyword>
      <CodeSymbol>boolean</CodeSymbol>
      <Enum>false&lt;Show&gt;|true&lt;Hide&gt;</Enum>
      <GUI>JCOMBOBOX</GUI>
    </Type>
    <Type>
      <Name>InputAxisType</Name>
      <Keyword>InputAxisType</Keyword>
      <CodeSymbol>String</CodeSymbol>
      <Enum>&quot;Mouse Y&quot;&lt;Mouse Y&gt;|&quot;Mouse X&quot;&lt;Mouse	X&gt;|&quot;Vertical&quot;&lt;Vertical&gt;|&quot;Horizontal&quot;&lt;Horizontal&gt;</Enum>
      <GUI>JCOMBOBOX</GUI>
    </Type>
    <Type>
      <Name>Method</Name>
      <Keyword>Method</Keyword>
      <CodeSymbol>String</CodeSymbol>
      <Format>
        <Literal>&quot;&quot;</Literal>
      </Format>
      <LegalValues>[^\n]*</LegalValues>
      <GUI>JTEXTFIELD</GUI>
      <WidgetName>M</WidgetName>
    </Type>
    <Type>
      <Name>Prefab</Name>
      <Keyword>Prefab</Keyword>
      <CodeSymbol>Prefab</CodeSymbol>
	  <Format>
        <Literal>Resources.Load(&quot;</Literal>
        <Fragment data="value"/>
        <Literal>&quot;, GameObject)</Literal>
      </Format>
    </Type>
    <Type>
      <Name>WrapMode</Name>
      <Keyword>WrapMode</Keyword>
      <CodeSymbol>WrapMode</CodeSymbol>
      <Enum>WrapMode.PingPong&lt;Ping
				Pong&gt;|WrapMode.Once&lt;Once&gt;|WrapMode.Default&lt;Default&gt;|WrapMode.Loop&lt;Loop&gt;|WrapMode.ClampForever&lt;Clamp
				Forever&gt;</Enum>
      <GUI>JCOMBOBOX</GUI>
    </Type>
    <Type>
      <Name>ControllerColliderHit</Name>
      <Keyword>ControllerColliderHit</Keyword>
      <CodeSymbol>ControllerColliderHit</CodeSymbol>
    </Type>
    <Type>
      <Name>Number</Name>
      <Keyword>float</Keyword>
      <CodeSymbol>float</CodeSymbol>
      <GUI>JSPINNER</GUI>
      <WidgetName>#</WidgetName>
    </Type>
    <Type>
      <Name>LockUnlock</Name>
      <Keyword>LockUnlock</Keyword>
      <CodeSymbol>boolean</CodeSymbol>
      <Enum>false&lt;Unlock&gt;|true&lt;Lock&gt;</Enum>
      <GUI>JCOMBOBOX</GUI>
    </Type>
    <Type>
      <Name>AllowDisallow</Name>
      <Keyword>AllowDisallow</Keyword>
      <CodeSymbol>boolean</CodeSymbol>
      <Enum>true&lt;Allow&gt;|false&lt;Disallow&gt;</Enum>
      <GUI>JCOMBOBOX</GUI>
    </Type>
    <Type>
      <Name>NumberOperator</Name>
      <Keyword>number_operator</Keyword>
      <CodeSymbol>int</CodeSymbol>
      <Enum>3&lt;Greater Than or Equal To&gt;|2&lt;Equal To&gt;|1&lt;Less
				Than&gt;|0&lt;Greater Than&gt;|4&lt;Less Than or Equal To&gt;</Enum>
      <GUI>JCOMBOBOX</GUI>
    </Type>
    <Type>
      <Name>Image</Name>
      <Keyword>Image</Keyword>
      <CodeSymbol>Texture2D</CodeSymbol>
      <Format>
        <Literal>Resources.Load(&quot;</Literal>
        <Fragment data="value"/>
        <Literal>&quot;, Texture2D)</Literal>
      </Format>
      <LegalValues>[^\&quot;]*</LegalValues>
      <WidgetName>i</WidgetName>
    </Type>
    <Type>
      <Name>Mouse Button</Name>
      <Keyword>MouseButton</Keyword>
      <CodeSymbol>int</CodeSymbol>
      <Enum>2&lt;Middle Mouse Button&gt;|1&lt;Right Mouse
				Button&gt;|0&lt;Left Mouse Button&gt;|-1&lt;None&gt;</Enum>
      <GUI>JCOMBOBOX</GUI>
    </Type>
    <Type>
      <Name>KeyCode</Name>
      <Keyword>KeyCode</Keyword>
      <CodeSymbol>KeyCode</CodeSymbol>
      <Enum>
				KeyCode.Caret&lt;^&gt;|KeyCode.Question&lt;?&gt;|KeyCode.Equals&lt;=&gt;|
				KeyCode.F5&lt;F5&gt;|
				KeyCode.Less&lt;Less
				Than&gt;|
				KeyCode.RightShift&lt;Right Shift&gt;|KeyCode.DoubleQuote&lt;&quot;&gt;|
				KeyCode.Alpha6&lt;6&gt;|
				KeyCode.Alpha2&lt;2&gt;|
				KeyCode.Escape&lt;Escape&gt;|
				KeyCode.Period&lt;.&gt;|
				KeyCode.LeftCommand&lt;Left Command&gt;|KeyCode.Plus&lt;+&gt;|KeyCode.Slash&lt;/&gt;|
				KeyCode.F10&lt;F10&gt;|KeyCode.Backspace&lt;Backspace&gt;|
				KeyCode.Keypad1&lt;Numeric Keypad 1&gt;|
				KeyCode.Numlock&lt;Numlock&gt;|
				KeyCode.Keypad7&lt;Numeric Keypad 7&gt;|
				KeyCode.PageDown&lt;Page
				Down&gt;|
				KeyCode.F14&lt;F14&gt;|
				KeyCode.Keypad4&lt;Numeric Keypad 4&gt;|KeyCode.Backslash&lt;\&gt;|
				KeyCode.Keypad9&lt;Numeric Keypad 9&gt;|KeyCode.Minus&lt;-&gt;|KeyCode.RightBracket&lt;]&gt;|KeyCode.Space&lt;Space&gt;|
				KeyCode.Exclaim&lt;!&gt;|
				KeyCode.Clear&lt;Clear&gt;|
				KeyCode.KeypadMultiply&lt;Numeric Keypad *&gt;|KeyCode.RightAlt&lt;Right
				Alt&gt;|KeyCode.LeftShift&lt;Left
				Shift&gt;|KeyCode.RightArrow&lt;Right
				Arrow&gt;|KeyCode.UpArrow&lt;Up
				Arrow&gt;|KeyCode.RightControl&lt;Right
				Control&gt;|
				KeyCode.Asterisk&lt;*&gt;|KeyCode.BackQuote&lt;`&gt;|KeyCode.Colon&lt;:&gt;|KeyCode.F1&lt;F1&gt;|KeyCode.LeftArrow&lt;Left
				Arrow&gt;|KeyCode.F3&lt;F3&gt;|KeyCode.F2&lt;F2&gt;|KeyCode.Home&lt;Home&gt;|KeyCode.F4&lt;F4&gt;|KeyCode.F6&lt;F6&gt;|KeyCode.F7&lt;F7&gt;|KeyCode.F8&lt;F8&gt;|KeyCode.F9&lt;F9&gt;|
				KeyCode.DownArrow&lt;Down Arrow&gt;|KeyCode.LeftBracket&lt;[&gt;|
				KeyCode.Ampersand&lt;&amp;&gt;|KeyCode.A&lt;a&gt;|KeyCode.KeypadPeriod&lt;.&gt;|KeyCode.LeftAlt&lt;Left Alt&gt;|
				KeyCode.LeftControl&lt;Left Control&gt;|KeyCode.Pause&lt;Pause&gt;|
				KeyCode.V&lt;v&gt;|KeyCode.Dollar&lt;$&gt;|KeyCode.Tab&lt;Tab&gt;|
				KeyCode.L&lt;l&gt;|KeyCode.Underscore&lt;_&gt;|
				KeyCode.Q&lt;q&gt;|KeyCode.KeypadEnter&lt;Numeric Keypad
				Enter&gt;|
				KeyCode.KeypadEquals&lt;Numeric Keypad =&gt;|KeyCode.Greater&lt;Greater Than&gt;|
				KeyCode.G&lt;g&gt;|KeyCode.Alpha3&lt;3&gt;|KeyCode.Z&lt;z&gt;|KeyCode.Alpha0&lt;0&gt;|KeyCode.Alpha1&lt;1&gt;|KeyCode.X&lt;x&gt;|KeyCode.Y&lt;y&gt;|KeyCode.Alpha7&lt;7&gt;|KeyCode.Alpha4&lt;4&gt;|KeyCode.W&lt;w&gt;|KeyCode.Alpha5&lt;5&gt;|
				KeyCode.B&lt;b&gt;|KeyCode.T&lt;t&gt;|KeyCode.U&lt;u&gt;|KeyCode.R&lt;r&gt;|KeyCode.Alpha8&lt;8&gt;|KeyCode.Comma&lt;,&gt;|KeyCode.S&lt;s&gt;|KeyCode.Alpha9&lt;9&gt;|KeyCode.P&lt;p&gt;|KeyCode.O&lt;o&gt;|KeyCode.N&lt;n&gt;|KeyCode.M&lt;m&gt;|KeyCode.KeypadDivide&lt;/&gt;|KeyCode.K&lt;k&gt;|KeyCode.J&lt;j&gt;|KeyCode.Delete&lt;Delete&gt;|KeyCode.I&lt;i&gt;|KeyCode.H&lt;h&gt;|KeyCode.F&lt;f&gt;|
				KeyCode.At&lt;@&gt;|KeyCode.E&lt;e&gt;|KeyCode.D&lt;d&gt;|KeyCode.C&lt;c&gt;|KeyCode.F15&lt;F15&gt;|KeyCode.Semicolon&lt;;&gt;|KeyCode.RightParen&lt;)&gt;|KeyCode.Hash&lt;#&gt;|KeyCode.Keypad0&lt;Numeric
				Keypad 0&gt;|KeyCode.KeyPad6&lt;Numeric Keypad
				6&gt;|KeyCode.F12&lt;F12&gt;|KeyCode.Keypad5&lt;Numeric
				Keypad 5&gt;|KeyCode.F11&lt;F11&gt;|KeyCode.ScrollLock&lt;ScrollLock&gt;|KeyCode.Keypad2&lt;Numeric Keypad
				2&gt;|KeyCode.Keypad3&lt;Numeric Keypad
				3&gt;|KeyCode.F13&lt;F13&gt;|KeyCode.LeftParen&lt;(&gt;|KeyCode.RightCommand&lt;Right
				Command&gt;|
				KeyCode.KeypadPlus&lt;Numeric Keypad
				+&gt;|KeyCode.None&lt;None&gt;|KeyCode.End&lt;End&gt;|KeyCode.Return&lt;Return&gt;|
				KeyCode.Insert&lt;Insert&gt;|KeyCode.KeypadMinus&lt;Numeric Keypad -&gt;|KeyCode.Keypad8&lt;Numeric Keypad 8&gt;|KeyCode.CapsLock&lt;Capslock&gt;|KeyCode.Quote&lt;&apos;&gt;|KeyCode.PageUp&lt;Page
				Up&gt;</Enum>
      <GUI>JCOMBOBOX</GUI>
    </Type>
    <Type>
      <Name>Question</Name>
      <Keyword>question</Keyword>
      <CodeSymbol>boolean</CodeSymbol>
      <WidgetName>?</WidgetName>
    </Type>
    <Type>
      <Name>Dialogue</Name>
      <Keyword>Dialogue</Keyword>
      <CodeSymbol>int</CodeSymbol>
      <Format>
        <Fragment data="uniqueID"/>
      </Format>
      <WidgetName>D</WidgetName>
    </Type>
    <Type>
      <Name>YesNo</Name>
      <Keyword>YesNo</Keyword>
      <CodeSymbol>boolean</CodeSymbol>
      <Enum>true&lt;Yes&gt;|false&lt;No&gt;</Enum>
      <GUI>JCOMBOBOX</GUI>
    </Type>
    <Type>
      <Name>Animation</Name>
      <Keyword>Animation</Keyword>
      <CodeSymbol>String</CodeSymbol>
      <Format>
        <Literal>&quot;</Literal>
        <Fragment data="value"/>
        <Literal>&quot;</Literal>
      </Format>
      <LegalValues>[^\&quot;]*</LegalValues>
      <WidgetName>A</WidgetName>
    </Type>
    <Type>
      <Name>EnableDisable</Name>
      <Keyword>EnableDisable</Keyword>
      <CodeSymbol>boolean</CodeSymbol>
      <Enum>false&lt;Disable&gt;|true&lt;Enable&gt;</Enum>
      <GUI>JCOMBOBOX</GUI>
    </Type>
    <Type>
      <Name>Scrollview</Name>
      <Keyword>Scrollview</Keyword>
      <CodeSymbol>String</CodeSymbol>
      <Format>
        <Literal>&quot;</Literal>
        <Fragment data="ScriptEase Variable"/>
        <Literal>&quot;</Literal>
      </Format>
      <WidgetName>SV</WidgetName>
    </Type>
    <Type>
      <Name>Scene</Name>
      <Keyword>Scene</Keyword>
      <CodeSymbol>String</CodeSymbol>
      <Format>
        <Literal>&quot;</Literal>
        <Fragment data="value"/>
        <Literal>&quot;.Replace(&quot;.unity&quot;, &quot;&quot;)</Literal>
      </Format>
      <WidgetName>S</WidgetName>
    </Type>
    <Type>
      <Name>Void</Name>
      <Keyword>void</Keyword>
      <CodeSymbol></CodeSymbol>
      <WidgetName>!</WidgetName>
    </Type>
    <Type>
      <Name>Velocity</Name>
      <Keyword>Velocity</Keyword>
      <CodeSymbol>Vector3</CodeSymbol>
      <WidgetName>V</WidgetName>
    </Type>
    <Type>
      <Name>Position</Name>
      <Keyword>Vector3</Keyword>
      <CodeSymbol>Vector3</CodeSymbol>
      <WidgetName>P</WidgetName>
    </Type>
    <Type>
      <Name>GUI</Name>
      <Keyword>GUI</Keyword>
      <CodeSymbol>String</CodeSymbol>
      <Format>
        <Literal>&quot;</Literal>
        <Fragment data="ScriptEase Variable"/>
        <Literal>&quot;</Literal>
      </Format>
      <WidgetName>g</WidgetName>
    </Type>
    <Type>
      <Name>Collider</Name>
      <Keyword>Collider</Keyword>
      <CodeSymbol>Collider</CodeSymbol>
    </Type>
    <Type>
      <Name>Cloth</Name>
      <Keyword>Cloth</Keyword>
      <CodeSymbol>Cloth</CodeSymbol>
    </Type>
    <Type>
      <Name>Collision</Name>
      <Keyword>Collision</Keyword>
      <CodeSymbol>Collision</CodeSymbol>
    </Type>
    <Type>
      <Name>Text</Name>
      <Keyword>String</Keyword>
      <CodeSymbol>String</CodeSymbol>
      <Format>
        <Literal>&quot;</Literal>
        <Fragment data="value"/>
        <Literal>&quot;</Literal>
      </Format>
      <LegalValues>[^\&quot;]*</LegalValues>
      <GUI>JTEXTFIELD</GUI>
      <WidgetName>Tx</WidgetName>
    </Type>
    <Type>
      <Name>GUISkin</Name>
      <Keyword>GUISkin</Keyword>
      <CodeSymbol>GUISkin</CodeSymbol>
      <Format>
        <Literal>Resources.Load(&quot;</Literal>
        <Fragment data="value"/>
        <Literal>&quot;, GUISkin)</Literal>
      </Format>
      <LegalValues>[^\&quot;]*</LegalValues>
      <WidgetName>gs</WidgetName>
    </Type>
    <Type>
      <Name>Dialogue Line</Name>
      <Keyword>DialogueLine</Keyword>
      <CodeSymbol>int</CodeSymbol>
      <Format>
        <Fragment data="uniqueID"/>
      </Format>
      <WidgetName>Dl</WidgetName>
    </Type>
    <Type>
      <Name>Story Point</Name>
      <Keyword>storyPoint</Keyword>
      <CodeSymbol>String</CodeSymbol>
      <Format>
        <Literal>&quot;</Literal>
        <Fragment data="unique32charname"/>
        <Literal>&quot;</Literal>
      </Format>
      <LegalValues>[^\&quot;]*</LegalValues>
      <WidgetName>SP</WidgetName>
    </Type>
    <Type>
      <Name>Audio</Name>
      <Keyword>Audio</Keyword>
      <CodeSymbol>AudioClip</CodeSymbol>
      <Format>
        <Literal>Resources.Load(&quot;</Literal>
        <Fragment data="value"/>
        <Literal>&quot;, AudioClip)</Literal>
      </Format>
      <LegalValues>[^\&quot;]*</LegalValues>
      <WidgetName>a</WidgetName>
    </Type>
    <Type>
      <Name>Scale Mode</Name>
      <Keyword>ScaleMode</Keyword>
      <CodeSymbol>ScaleMode</CodeSymbol>
      <Enum>ScaleMode.ScaleToFit&lt;Scale&gt;|ScaleMode.ScaleAndCrop&lt;Crop&gt;|ScaleMode.StretchToFill&lt;Stretch&gt;</Enum>
      <GUI>JCOMBOBOX</GUI>
    </Type>
    <Type>
      <Name>AudioSource</Name>
      <Keyword>AudioSource</Keyword>
      <CodeSymbol>AudioSource</CodeSymbol>
    </Type>
  </Types>
  <Slots defaultFormat="SECause">
    <Slot format="UnityCause">
      <Name>OnApplicationQuit</Name>
      <Keyword>OnApplicationQuit</Keyword>
      <Condition>OnApplicationQuit</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot>
      <Name>MouseClicked</Name>
      <Keyword>MouseClicked</Keyword>
      <Condition>Input.GetMouseButtonDown(0)</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnCollisionExit</Name>
      <Keyword>OnCollisionExit</Keyword>
      <Condition>OnCollisionExit</Condition>
      <Parameters>
        <KnowIt>
          <Name>collision</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Types>
            <Type>Collision</Type>
          </Types>
        </KnowIt>
      </Parameters>
      <Implicits>
        <KnowIt>
          <Name>Colliding Object</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Types>
            <Type>GameObject</Type>
          </Types>
          <Binding flavour="function">
            <ScriptIt>
              <Name>Colliding Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Children/>
              <CodeBlocks>
                <CodeBlockSource>
                  <Name>Colliding Object</Name>
                  <Visible>true</Visible>
                  <Enabled>true</Enabled>
                  <Labels/>
                  <Id>108</Id>
                  <Types>
                    <Type>GameObject</Type>
                  </Types>
                  <Code>
                    <Line>
                      <Literal>return </Literal>
                      <Scope data="slotparameter" ref="collision">
                        <Fragment data="name"/>
                      </Scope>
                      <Literal>.gameObject;</Literal>
                    </Line>
                  </Code>
                </CodeBlockSource>
              </CodeBlocks>
            </ScriptIt>
          </Binding>
        </KnowIt>
        <KnowIt>
          <Name>Velocity</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Types>
            <Type>Velocity</Type>
          </Types>
          <Binding flavour="function">
            <ScriptIt>
              <Name>Velocity</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Children/>
              <CodeBlocks>
                <CodeBlockSource>
                  <Name>Velocity</Name>
                  <Visible>true</Visible>
                  <Enabled>true</Enabled>
                  <Labels/>
                  <Id>261</Id>
                  <Types>
                    <Type>Velocity</Type>
                  </Types>
                  <Code>
                    <Line>
                      <Literal>return </Literal>
                      <Scope data="slotparameter" ref="collision">
                        <Fragment data="name"/>
                      </Scope>
                      <Literal>.relativeVelocity;</Literal>
                    </Line>
                  </Code>
                </CodeBlockSource>
              </CodeBlocks>
            </ScriptIt>
          </Binding>
        </KnowIt>
      </Implicits>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnConnectedToServer</Name>
      <Keyword>OnConnectedToServer</Keyword>
      <Condition>OnConnectedToServer</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnTriggerEnter</Name>
      <Keyword>OnTriggerEnter</Keyword>
      <Condition>OnTriggerEnter</Condition>
      <Parameters>
        <KnowIt>
          <Name>other</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Types>
            <Type>Collider</Type>
          </Types>
        </KnowIt>
      </Parameters>
      <Implicits>
        <KnowIt>
          <Name>Triggering Object</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Types>
            <Type>GameObject</Type>
          </Types>
          <Binding flavour="function">
            <ScriptIt>
              <Name>Triggering Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Children/>
              <CodeBlocks>
                <CodeBlockSource>
                  <Name>Triggering Object</Name>
                  <Visible>true</Visible>
                  <Enabled>true</Enabled>
                  <Labels/>
                  <Id>110</Id>
                  <Types>
                    <Type>GameObject</Type>
                  </Types>
                  <Code>
                    <Line>
                      <Literal>return </Literal>
                      <Scope data="slotparameter" ref="other">
                        <Fragment data="name"/>
                      </Scope>
                      <Literal>.gameObject;</Literal>
                    </Line>
                  </Code>
                </CodeBlockSource>
              </CodeBlocks>
            </ScriptIt>
          </Binding>
        </KnowIt>
      </Implicits>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnAnimatorIK</Name>
      <Keyword>OnAnimatorIK</Keyword>
      <Condition>OnAnimatorIK</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnAnimatorMove</Name>
      <Keyword>OnAnimatorMove</Keyword>
      <Condition>OnAnimatorMove</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnJointBreak</Name>
      <Keyword>OnJointBreak</Keyword>
      <Condition>OnJointBreak</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnWillRenderObject</Name>
      <Keyword>OnWillRenderObject</Keyword>
      <Condition>OnWillRenderObject</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnMouseUpAsButton</Name>
      <Keyword>OnMouseUpAsButton</Keyword>
      <Condition>OnMouseUpAsButton</Condition>
      <Parameters/>
      <Implicits>
        <KnowIt>
          <Name>Mouse Button</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Types>
            <Type>MouseButton</Type>
          </Types>
          <Binding flavour="function">
            <ScriptIt>
              <Name>Mouse Button</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Children/>
              <CodeBlocks>
                <CodeBlockSource>
                  <Name>Mouse Button</Name>
                  <Visible>true</Visible>
                  <Enabled>true</Enabled>
                  <Labels/>
                  <Id>103</Id>
                  <Types>
                    <Type>MouseButton</Type>
                  </Types>
                  <Code>
                    <Line>
                      <Literal>if(Input.GetMouseButton(0))</Literal>
                    </Line>
                    <Indent>
                      <Line>
                        <Literal>return 0;</Literal>
                      </Line>
                    </Indent>
                    <Line>
                      <Literal>else if(Input.GetMouseButton(1))</Literal>
                    </Line>
                    <Indent>
                      <Line>
                        <Literal>return 1;</Literal>
                      </Line>
                    </Indent>
                    <Line>
                      <Literal>else if(Input.GetMouseButton(2))</Literal>
                    </Line>
                    <Indent>
                      <Line>
                        <Literal>return 2;</Literal>
                      </Line>
                    </Indent>
                    <Line>
                      <Literal>return -1;</Literal>
                    </Line>
                  </Code>
                </CodeBlockSource>
              </CodeBlocks>
            </ScriptIt>
          </Binding>
        </KnowIt>
      </Implicits>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnDrawGizmos</Name>
      <Keyword>OnDrawGizmos</Keyword>
      <Condition>OnDrawGizmos</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnAudioFilterRead</Name>
      <Keyword>OnAudioFilterRead</Keyword>
      <Condition>OnAudioFilterRead</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnEnable</Name>
      <Keyword>OnEnable</Keyword>
      <Condition>OnEnable</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnMouseDown</Name>
      <Keyword>OnMouseDown</Keyword>
      <Condition>OnMouseDown</Condition>
      <Parameters/>
      <Implicits>
        <KnowIt>
          <Name>Mouse Button</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Types>
            <Type>MouseButton</Type>
          </Types>
          <Binding flavour="function">
            <ScriptIt>
              <Name>Mouse Button</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Children/>
              <CodeBlocks>
                <CodeBlockSource>
                  <Name>Mouse Button</Name>
                  <Visible>true</Visible>
                  <Enabled>true</Enabled>
                  <Labels/>
                  <Id>100</Id>
                  <Types>
                    <Type>MouseButton</Type>
                  </Types>
                  <Code>
                    <Line>
                      <Literal>if(Input.GetMouseButton(0))</Literal>
                    </Line>
                    <Indent>
                      <Line>
                        <Literal>return 0;</Literal>
                      </Line>
                    </Indent>
                    <Line>
                      <Literal>else if(Input.GetMouseButton(1))</Literal>
                    </Line>
                    <Indent>
                      <Line>
                        <Literal>return 1;</Literal>
                      </Line>
                    </Indent>
                    <Line>
                      <Literal>else if(Input.GetMouseButton(2))</Literal>
                    </Line>
                    <Indent>
                      <Line>
                        <Literal>return 2;</Literal>
                      </Line>
                    </Indent>
                    <Line>
                      <Literal>return -1;</Literal>
                    </Line>
                  </Code>
                </CodeBlockSource>
              </CodeBlocks>
            </ScriptIt>
          </Binding>
        </KnowIt>
      </Implicits>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnParticleCollision</Name>
      <Keyword>OnParticleCollision</Keyword>
      <Condition>OnParticleCollision</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnMouseDrag</Name>
      <Keyword>OnMouseDrag</Keyword>
      <Condition>OnMouseDrag</Condition>
      <Parameters/>
      <Implicits>
        <KnowIt>
          <Name>Mouse Button</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Types>
            <Type>MouseButton</Type>
          </Types>
          <Binding flavour="function">
            <ScriptIt>
              <Name>Mouse Button</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Children/>
              <CodeBlocks>
                <CodeBlockSource>
                  <Name>Mouse Button</Name>
                  <Visible>true</Visible>
                  <Enabled>true</Enabled>
                  <Labels/>
                  <Id>101</Id>
                  <Types>
                    <Type>MouseButton</Type>
                  </Types>
                  <Code>
                    <Line>
                      <Literal>if(Input.GetMouseButton(0))</Literal>
                    </Line>
                    <Indent>
                      <Line>
                        <Literal>return 0;</Literal>
                      </Line>
                    </Indent>
                    <Line>
                      <Literal>else if(Input.GetMouseButton(1))</Literal>
                    </Line>
                    <Indent>
                      <Line>
                        <Literal>return 1;</Literal>
                      </Line>
                    </Indent>
                    <Line>
                      <Literal>else if(Input.GetMouseButton(2))</Literal>
                    </Line>
                    <Indent>
                      <Line>
                        <Literal>return 2;</Literal>
                      </Line>
                    </Indent>
                    <Line>
                      <Literal>return -1;</Literal>
                    </Line>
                  </Code>
                </CodeBlockSource>
              </CodeBlocks>
            </ScriptIt>
          </Binding>
        </KnowIt>
      </Implicits>
    </Slot>
    <Slot format="UnityCause">
      <Name>FixedUpdate</Name>
      <Keyword>FixedUpdate</Keyword>
      <Condition>FixedUpdate</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnTriggerStay</Name>
      <Keyword>OnTriggerStay</Keyword>
      <Condition>OnTriggerStay</Condition>
      <Parameters>
        <KnowIt>
          <Name>other</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Types>
            <Type>Collider</Type>
          </Types>
        </KnowIt>
      </Parameters>
      <Implicits>
        <KnowIt>
          <Name>Triggering Object</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Types>
            <Type>GameObject</Type>
          </Types>
          <Binding flavour="function">
            <ScriptIt>
              <Name>Triggering Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Children/>
              <CodeBlocks>
                <CodeBlockSource>
                  <Name>Triggering Object</Name>
                  <Visible>true</Visible>
                  <Enabled>true</Enabled>
                  <Labels/>
                  <Id>112</Id>
                  <Types>
                    <Type>GameObject</Type>
                  </Types>
                  <Code>
                    <Line>
                      <Literal>return </Literal>
                      <Scope data="slotparameter" ref="other">
                        <Fragment data="name"/>
                      </Scope>
                      <Literal>.gameObject;</Literal>
                    </Line>
                  </Code>
                </CodeBlockSource>
              </CodeBlocks>
            </ScriptIt>
          </Binding>
        </KnowIt>
      </Implicits>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnCollisionEnter</Name>
      <Keyword>OnCollisionEnter</Keyword>
      <Condition>OnCollisionEnter</Condition>
      <Parameters>
        <KnowIt>
          <Name>collision</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Types>
            <Type>Collision</Type>
          </Types>
        </KnowIt>
      </Parameters>
      <Implicits>
        <KnowIt>
          <Name>Colliding Object</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Types>
            <Type>GameObject</Type>
          </Types>
          <Binding flavour="function">
            <ScriptIt>
              <Name>Colliding Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Children/>
              <CodeBlocks>
                <CodeBlockSource>
                  <Name>Colliding Object</Name>
                  <Visible>true</Visible>
                  <Enabled>true</Enabled>
                  <Labels/>
                  <Id>105</Id>
                  <Types>
                    <Type>GameObject</Type>
                  </Types>
                  <Code>
                    <Line>
                      <Literal>return </Literal>
                      <Scope data="slotparameter" ref="collision">
                        <Fragment data="name"/>
                      </Scope>
                      <Literal>.gameObject;</Literal>
                    </Line>
                  </Code>
                </CodeBlockSource>
              </CodeBlocks>
            </ScriptIt>
          </Binding>
        </KnowIt>
        <KnowIt>
          <Name>Velocity</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Types>
            <Type>Velocity</Type>
          </Types>
          <Binding flavour="function">
            <ScriptIt>
              <Name>Velocity</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Children/>
              <CodeBlocks>
                <CodeBlockSource>
                  <Name>Velocity</Name>
                  <Visible>true</Visible>
                  <Enabled>true</Enabled>
                  <Labels/>
                  <Id>260</Id>
                  <Types>
                    <Type>Velocity</Type>
                  </Types>
                  <Code>
                    <Line>
                      <Literal>return </Literal>
                      <Scope data="slotparameter" ref="collision">
                        <Fragment data="name"/>
                      </Scope>
                      <Literal>.relativeVelocity;</Literal>
                    </Line>
                  </Code>
                </CodeBlockSource>
              </CodeBlocks>
            </ScriptIt>
          </Binding>
        </KnowIt>
      </Implicits>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnPreCull</Name>
      <Keyword>OnPreCull</Keyword>
      <Condition>OnPreCull</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnMouseUp</Name>
      <Keyword>OnMouseUp</Keyword>
      <Condition>OnMouseUp</Condition>
      <Parameters/>
      <Implicits>
        <KnowIt>
          <Name>Mouse Button</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Types>
            <Type>MouseButton</Type>
          </Types>
          <Binding flavour="function">
            <ScriptIt>
              <Name>Mouse Button</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Children/>
              <CodeBlocks>
                <CodeBlockSource>
                  <Name>Mouse Button</Name>
                  <Visible>true</Visible>
                  <Enabled>true</Enabled>
                  <Labels/>
                  <Id>102</Id>
                  <Types>
                    <Type>MouseButton</Type>
                  </Types>
                  <Code>
                    <Line>
                      <Literal>if(Input.GetMouseButton(0))</Literal>
                    </Line>
                    <Indent>
                      <Line>
                        <Literal>return 0;</Literal>
                      </Line>
                    </Indent>
                    <Line>
                      <Literal>else if(Input.GetMouseButton(1))</Literal>
                    </Line>
                    <Indent>
                      <Line>
                        <Literal>return 1;</Literal>
                      </Line>
                    </Indent>
                    <Line>
                      <Literal>else if(Input.GetMouseButton(2))</Literal>
                    </Line>
                    <Indent>
                      <Line>
                        <Literal>return 2;</Literal>
                      </Line>
                    </Indent>
                    <Line>
                      <Literal>return -1;</Literal>
                    </Line>
                  </Code>
                </CodeBlockSource>
              </CodeBlocks>
            </ScriptIt>
          </Binding>
        </KnowIt>
      </Implicits>
    </Slot>
    <Slot format="UnityCause">
      <Name>Start</Name>
      <Keyword>Start</Keyword>
      <Condition>Start</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnMouseExit</Name>
      <Keyword>OnMouseExit</Keyword>
      <Condition>OnMouseExit</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>Update</Name>
      <Keyword>Update</Keyword>
      <Condition>Update</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnDestroy</Name>
      <Keyword>OnDestroy</Keyword>
      <Condition>OnDestroy</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>LateUpdate</Name>
      <Keyword>LateUpdate</Keyword>
      <Condition>LateUpdate</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnBecameInvisible</Name>
      <Keyword>OnBecameInvisible</Keyword>
      <Condition>OnBecameInvisible</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnTriggerExit</Name>
      <Keyword>OnTriggerExit</Keyword>
      <Condition>OnTriggerExit</Condition>
      <Parameters>
        <KnowIt>
          <Name>other</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Types>
            <Type>Collider</Type>
          </Types>
        </KnowIt>
      </Parameters>
      <Implicits>
        <KnowIt>
          <Name>Triggering Object</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Types>
            <Type>GameObject</Type>
          </Types>
          <Binding flavour="function">
            <ScriptIt>
              <Name>Triggering Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Children/>
              <CodeBlocks>
                <CodeBlockSource>
                  <Name>Triggering Object</Name>
                  <Visible>true</Visible>
                  <Enabled>true</Enabled>
                  <Labels/>
                  <Id>111</Id>
                  <Types>
                    <Type>GameObject</Type>
                  </Types>
                  <Code>
                    <Line>
                      <Literal>return </Literal>
                      <Scope data="slotparameter" ref="other">
                        <Fragment data="name"/>
                      </Scope>
                      <Literal>.gameObject;</Literal>
                    </Line>
                  </Code>
                </CodeBlockSource>
              </CodeBlocks>
            </ScriptIt>
          </Binding>
        </KnowIt>
      </Implicits>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnRenderObject</Name>
      <Keyword>OnRenderObject</Keyword>
      <Condition>OnRenderObject</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnMouseOver</Name>
      <Keyword>OnMouseOver</Keyword>
      <Condition>OnMouseOver</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnDisable</Name>
      <Keyword>OnDisable</Keyword>
      <Condition>OnDisable</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnMouseEnter</Name>
      <Keyword>OnMouseEnter</Keyword>
      <Condition>OnMouseEnter</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>Awake</Name>
      <Keyword>Awake</Keyword>
      <Condition>Awake</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnDrawGizmosSelected</Name>
      <Keyword>OnDrawGizmosSelected</Keyword>
      <Condition>OnDrawGizmosSelected</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnApplicationPause</Name>
      <Keyword>OnApplicationPause</Keyword>
      <Condition>OnApplicationPause</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnNetworkInstantiate</Name>
      <Keyword>OnNetworkInstantiate</Keyword>
      <Condition>OnNetworkInstantiate</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnPostRender</Name>
      <Keyword>OnPostRender</Keyword>
      <Condition>OnPostRender</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnServerInitialized</Name>
      <Keyword>OnServerInitialized</Keyword>
      <Condition>OnServerInitialized</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnLevelWasLoaded</Name>
      <Keyword>OnLevelWasLoaded</Keyword>
      <Condition>OnLevelWasLoaded</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnDisconnectedFromServer</Name>
      <Keyword>OnDisconnectedFromServer</Keyword>
      <Condition>OnDisconnectedFromServer</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnMasterServerEvent</Name>
      <Keyword>OnMasterServerEvent</Keyword>
      <Condition>OnMasterServerEvent</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnControllerColliderHit</Name>
      <Keyword>OnControllerColliderHit</Keyword>
      <Condition>OnControllerColliderHit</Condition>
      <Parameters>
        <KnowIt>
          <Name>hit</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Types>
            <Type>ControllerColliderHit</Type>
          </Types>
        </KnowIt>
      </Parameters>
      <Implicits>
        <KnowIt>
          <Name>Rigid Object</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Types>
            <Type>GameObject</Type>
          </Types>
          <Binding flavour="function">
            <ScriptIt>
              <Name>Rigid Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Children/>
              <CodeBlocks>
                <CodeBlockSource>
                  <Name>Rigid Object</Name>
                  <Visible>true</Visible>
                  <Enabled>true</Enabled>
                  <Labels/>
                  <Id>106</Id>
                  <Types>
                    <Type>GameObject</Type>
                  </Types>
                  <Code>
                    <Line>
                      <Literal>return </Literal>
                      <Scope data="slotparameter" ref="hit">
                        <Fragment data="name"/>
                      </Scope>
                      <Literal>.gameObject;</Literal>
                    </Line>
                  </Code>
                </CodeBlockSource>
              </CodeBlocks>
            </ScriptIt>
          </Binding>
        </KnowIt>
      </Implicits>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnPlayerDisconnected</Name>
      <Keyword>OnPlayerDisconnected</Keyword>
      <Condition>OnPlayerDisconnected</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnPlayerConnected</Name>
      <Keyword>OnPlayerConnected</Keyword>
      <Condition>OnPlayerConnected</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnBecameVisible</Name>
      <Keyword>OnBecameVisible</Keyword>
      <Condition>OnBecameVisible</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnGUI</Name>
      <Keyword>OnGUI</Keyword>
      <Condition>OnGUI</Condition>
      <Parameters/>
      <Implicits>
        <KnowIt>
          <Name>GUI</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Types>
            <Type>GUI</Type>
          </Types>
          <Binding flavour="function">
            <ScriptIt>
              <Name>GUIConstant</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Children/>
              <CodeBlocks>
                <CodeBlockSource>
                  <Name>GUIConstant</Name>
                  <Visible>true</Visible>
                  <Enabled>true</Enabled>
                  <Labels/>
                  <Id>273</Id>
                  <Types>
                    <Type>GUI</Type>
                  </Types>
                  <Code>
                    <Line>
                      <Literal>return &quot;ScriptEase GUI Constraint&quot;;</Literal>
                    </Line>
                  </Code>
                </CodeBlockSource>
              </CodeBlocks>
            </ScriptIt>
          </Binding>
        </KnowIt>
      </Implicits>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnSerializeNetworkView</Name>
      <Keyword>OnSerializeNetworkView</Keyword>
      <Condition>OnSerializeNetworkView</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnFailedToConnect</Name>
      <Keyword>OnFailedToConnect</Keyword>
      <Condition>OnFailedToConnect</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnPreRender</Name>
      <Keyword>OnPreRender</Keyword>
      <Condition>OnPreRender</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnRenderImage</Name>
      <Keyword>OnRenderImage</Keyword>
      <Condition>OnRenderImage</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnFailedToConnectToMasterServer</Name>
      <Keyword>OnFailedToConnectToMasterServer</Keyword>
      <Condition>OnFailedToConnectToMasterServer</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnApplicationFocus</Name>
      <Keyword>OnApplicationFocus</Keyword>
      <Condition>OnApplicationFocus</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
    <Slot format="UnityCause">
      <Name>OnCollisionStay</Name>
      <Keyword>OnCollisionStay</Keyword>
      <Condition>OnCollisionStay</Condition>
      <Parameters>
        <KnowIt>
          <Name>collision</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Types>
            <Type>Collision</Type>
          </Types>
        </KnowIt>
      </Parameters>
      <Implicits>
        <KnowIt>
          <Name>Colliding Object</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Types>
            <Type>GameObject</Type>
          </Types>
          <Binding flavour="function">
            <ScriptIt>
              <Name>Colliding Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Children/>
              <CodeBlocks>
                <CodeBlockSource>
                  <Name>Colliding Object</Name>
                  <Visible>true</Visible>
                  <Enabled>true</Enabled>
                  <Labels/>
                  <Id>109</Id>
                  <Types>
                    <Type>GameObject</Type>
                  </Types>
                  <Code>
                    <Line>
                      <Literal>return </Literal>
                      <Scope data="slotparameter" ref="collision">
                        <Fragment data="name"/>
                      </Scope>
                      <Literal>.gameObject;</Literal>
                    </Line>
                  </Code>
                </CodeBlockSource>
              </CodeBlocks>
            </ScriptIt>
          </Binding>
        </KnowIt>
        <KnowIt>
          <Name>Velocity</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Types>
            <Type>Velocity</Type>
          </Types>
          <Binding flavour="function">
            <ScriptIt>
              <Name>Velocity</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Children/>
              <CodeBlocks>
                <CodeBlockSource>
                  <Name>Velocity</Name>
                  <Visible>true</Visible>
                  <Enabled>true</Enabled>
                  <Labels/>
                  <Id>262</Id>
                  <Types>
                    <Type>Velocity</Type>
                  </Types>
                  <Code>
                    <Line>
                      <Literal>return </Literal>
                      <Scope data="slotparameter" ref="collision">
                        <Fragment data="name"/>
                      </Scope>
                      <Literal>.relativeVelocity;</Literal>
                    </Line>
                  </Code>
                </CodeBlockSource>
              </CodeBlocks>
            </ScriptIt>
          </Binding>
        </KnowIt>
      </Implicits>
    </Slot>
    <Slot format="UnityCause">
      <Name>Reset</Name>
      <Keyword>Reset</Keyword>
      <Condition>Reset</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
  </Slots>
  <Causes>
    <CauseIt>
      <Name>When &lt;subject&gt; wakes up initialize the story system</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels>
        <Label>automatic</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When &lt;subject&gt; wakes up initialize the story system</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>Awake</Slot>
          <Id>114</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Scope data="start">
              <Line>
                <Literal>if(!SEStory.storyInitialized){</Literal>
              </Line>
              <Indent>
                <Line>
                  <Literal>SEStory.RegisterRoot(</Literal>
                  <Fragment data="formattedValue"/>
                  <Literal>, </Literal>
                  <Fragment data="fanIn"/>
                  <Literal>);</Literal>
                </Line>
                <Line>
                  <Literal>var parentName:String;</Literal>
                </Line>
                <Series data="orderedStoryPoints" unique="true">
                  <Line>
                    <Literal>parentName = </Literal>
                    <Fragment data="formattedValue"/>
                    <Literal>;</Literal>
                  </Line>
                  <Series data="childrenNodes" unique="true">
                    <Line>
                      <Literal>SEStory.RegisterChild(parentName, </Literal>
                      <Fragment data="formattedValue"/>
                      <Literal>, </Literal>
                      <Fragment data="fanIn"/>
                      <Literal>);</Literal>
                    </Line>
                  </Series>
                </Series>
              </Indent>
              <Line>
                <Literal>}</Literal>
              </Line>
            </Scope>
            <Line/>
            <Line>
              <Literal>//Initialize the Dialogue system.</Literal>
            </Line>
            <Line>
              <Literal>if(!SEDialogue.DialoguesInitialized){</Literal>
            </Line>
            <Indent>
              <Series data="dialogueRoots" unique="true">
                <Line>
                  <Literal>SEDialogue.RegisterRoot(&quot;</Literal>
                  <Fragment data="text"/>
                  <Literal>&quot;, </Literal>
                  <Fragment data="formattedValue"/>
                  <Literal>, </Literal>
                  <Fragment data="speaker"/>
                  <Literal>, </Literal>
                  <Fragment data="enabled"/>
                  <Literal>, </Literal>
                  <Scope data="image">
                    <Fragment data="formattedValue"/>
                  </Scope>
                  <Literal>, </Literal>
                  <Scope data="audio">
                    <Fragment data="formattedValue"/>
                  </Scope>
                  <Literal>);</Literal>
                </Line>
                <Line>
                  <Literal>var parentID:int;</Literal>
                </Line>
                <Series data="orderedDialogueLines" unique="true">
                  <Line>
                    <Literal>parentID = </Literal>
                    <Fragment data="formattedValue"/>
                    <Literal>;</Literal>
                  </Line>
                  <Series data="childLines" unique="true">
                    <Line>
                      <Literal>SEDialogue.RegisterChild(parentID, &quot;</Literal>
                      <Fragment data="text"/>
                      <Literal>&quot;, </Literal>
                      <Fragment data="formattedValue"/>
                      <Literal>, </Literal>
                      <Fragment data="speaker"/>
                      <Literal>, </Literal>
                      <Fragment data="enabled"/>
                      <Literal>, </Literal>
                      <Scope data="image">
                        <Fragment data="formattedValue"/>
                      </Scope>
                      <Literal>, </Literal>
                      <Scope data="audio">
                        <Fragment data="formattedValue"/>
                      </Scope>
                      <Literal>);</Literal>
                    </Line>
                  </Series>
                </Series>
              </Series>
            </Indent>
            <Line>
              <Literal>}</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When &lt;subject&gt;&apos;s GUI Updates show the Dialogue GUI</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels>
        <Label>automatic</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When &lt;subject&gt;&apos;s GUI Updates show the Dialogue GUI</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnGUI</Slot>
          <Id>264</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEDialogue.ShowDialogueGUI();</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>While &lt;subject&gt; exists, immediately</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>While &lt;subject&gt; exists, immediately</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>Update</Slot>
          <Id>7</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
                <Type>Prefab</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When &lt;subject&gt; is created</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When &lt;subject&gt; is created</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>Awake</Slot>
          <Id>8</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>While &lt;subject&gt; exists, regularly</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>While &lt;subject&gt; exists, regularly</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>FixedUpdate</Slot>
          <Id>9</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>While &lt;subject&gt; exists, finally</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>While &lt;subject&gt; exists, finally</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>LateUpdate</Slot>
          <Id>10</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>OnAnimatorIKs on &lt;subject&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>OnAnimatorIKs on &lt;subject&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnAnimatorIK</Slot>
          <Id>11</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>OnAnimatorMoves on &lt;subject&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>OnAnimatorMoves on &lt;subject&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnAnimatorMove</Slot>
          <Id>12</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When &lt;subject&gt;&apos;s application gains or loses focus
			</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When &lt;subject&gt;&apos;s application gains or loses focus
			</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnApplicationFocus</Slot>
          <Id>13</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When &lt;subject&gt;&apos;s application pauses</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When &lt;subject&gt;&apos;s application pauses</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnApplicationPause</Slot>
          <Id>14</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>Before &lt;subject&gt;&apos;s application quits</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Before &lt;subject&gt;&apos;s application quits</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnApplicationQuit</Slot>
          <Id>15</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>OnAudioFilterRead on &lt;subject&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>OnAudioFilterRead on &lt;subject&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnAudioFilterRead</Slot>
          <Id>16</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When &lt;subject&gt; is no longer visible on any camera</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When &lt;subject&gt; is no longer visible on any camera</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnBecameInvisible</Slot>
          <Id>17</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When &lt;subject&gt; becomes visible on a camera</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When &lt;subject&gt; becomes visible on a camera</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnBecameInvisible</Slot>
          <Id>18</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When &lt;subject&gt; collides with &lt;Colliding Object&gt; with &lt;Velocity&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When &lt;subject&gt; collides with &lt;Colliding Object&gt; with &lt;Velocity&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnCollisionEnter</Slot>
          <Id>19</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When &lt;subject&gt; stops colliding with &lt;Colliding Object&gt; with &lt;Velocity&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When &lt;subject&gt; stops colliding with &lt;Colliding Object&gt; with &lt;Velocity&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnCollisionExit</Slot>
          <Id>20</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>While &lt;subject&gt; is colliding with &lt;Colliding Object&gt; with &lt;Velocity&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>While &lt;subject&gt; is colliding with &lt;Colliding Object&gt; with &lt;Velocity&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnCollisionStay</Slot>
          <Id>21</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When a connection is made to &lt;subject&gt;&apos;s server
			</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When a connection is made to &lt;subject&gt;&apos;s server
			</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnConnectedToServer</Slot>
          <Id>22</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When &lt;subject&gt; collides with &lt;Rigid Object&gt; while moving</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When &lt;subject&gt; collides with &lt;Rigid Object&gt; while moving</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnControllerColliderHit</Slot>
          <Id>23</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When &lt;subject&gt; is destroyed</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When &lt;subject&gt; is destroyed</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnDestroy</Slot>
          <Id>24</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When &lt;subject&gt; is disabled</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When &lt;subject&gt; is disabled</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnDisable</Slot>
          <Id>25</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When a connection is terminated to &lt;subject&gt;&apos;s server</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When a connection is terminated to &lt;subject&gt;&apos;s server</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnDisconnectedFromServer</Slot>
          <Id>26</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>OnDrawGizmos on &lt;subject&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>OnDrawGizmos on &lt;subject&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnDrawGizmos</Slot>
          <Id>27</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>OnDrawGizmosSelected on &lt;subject&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>OnDrawGizmosSelected on &lt;subject&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnDrawGizmosSelected</Slot>
          <Id>28</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When &lt;subject&gt; is enabled</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When &lt;subject&gt; is enabled</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnEnable</Slot>
          <Id>29</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When a connection attempt to &lt;subject&gt;&apos;s server fails</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When a connection attempt to &lt;subject&gt;&apos;s server fails</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnFailedToConnect</Slot>
          <Id>30</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When there is a problem connecting to &lt;subject&gt;&apos;s MasterServer</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When there is a problem connecting to &lt;subject&gt;&apos;s MasterServer</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnFailedToConnectToMasterServer</Slot>
          <Id>31</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When the &lt;GUI&gt; is updated</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When the &lt;GUI&gt; is updated</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>ScriptEase</Subject>
          <Slot>OnGUI</Slot>
          <Id>32</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>ScriptEase</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
              <Binding flavour="automatic"/>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When a joint attached to &lt;subject&gt; is broken</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When a joint attached to &lt;subject&gt; is broken</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnJointBreak</Slot>
          <Id>33</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When a new level is loaded for &lt;subject&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When a new level is loaded for &lt;subject&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnLevelWasLoaded</Slot>
          <Id>34</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When &lt;Master Server Event&gt; occurs on &lt;subject&gt;&apos;s MasterServer</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When &lt;Master Server Event&gt; occurs on &lt;subject&gt;&apos;s MasterServer</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnMasterServerEvent</Slot>
          <Id>35</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When &lt;Mouse Button&gt; is clicked on &lt;subject&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When &lt;Mouse Button&gt; is clicked on &lt;subject&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnMouseDown</Slot>
          <Id>36</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>While &lt;Mouse Button&gt; is pressed on &lt;subject&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>While &lt;Mouse Button&gt; is pressed on &lt;subject&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnMouseDrag</Slot>
          <Id>37</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When mouse enters &lt;subject&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When mouse enters &lt;subject&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnMouseEnter</Slot>
          <Id>38</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When mouse exits &lt;subject&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When mouse exits &lt;subject&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnMouseExit</Slot>
          <Id>39</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>While mouse is over &lt;subject&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>While mouse is over &lt;subject&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnMouseOver</Slot>
          <Id>40</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When &lt;Mouse Button&gt; is released over &lt;subject&gt;
			</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When &lt;Mouse Button&gt; is released over &lt;subject&gt;
			</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnMouseUp</Slot>
          <Id>41</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When &lt;Mouse Button&gt; is released over &lt;subject&gt; it entered</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When &lt;Mouse Button&gt; is released over &lt;subject&gt; it entered</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnMouseUpAsButton</Slot>
          <Id>42</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>OnNetworkInstantiate on &lt;subject&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>OnNetworkInstantiate on &lt;subject&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnNetworkInstantiate</Slot>
          <Id>43</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When a particle hits &lt;subject&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When a particle hits &lt;subject&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnParticleCollision</Slot>
          <Id>44</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When a player connects to &lt;subject&gt;&apos;s server</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When a player connects to &lt;subject&gt;&apos;s server</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnPlayerConnected</Slot>
          <Id>45</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When a player is disconnected from &lt;subject&gt;&apos;s server</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When a player is disconnected from &lt;subject&gt;&apos;s server</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnPlayerDisconnected</Slot>
          <Id>46</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When the camera &lt;subject&gt; finishes rendering the scene
			</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When the camera &lt;subject&gt; finishes rendering the scene
			</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnPostRender</Slot>
          <Id>47</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>Before the camera &lt;subject&gt; culls the scene</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Before the camera &lt;subject&gt; culls the scene</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnPreCull</Slot>
          <Id>48</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>Before the camera &lt;subject&gt; starts rendering the scene</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Before the camera &lt;subject&gt; starts rendering the scene</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnPreRender</Slot>
          <Id>49</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When the camera &lt;subject&gt; finishes rendering &lt;image&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When the camera &lt;subject&gt; finishes rendering &lt;image&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnRenderImage</Slot>
          <Id>50</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>image</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Image</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When a camera finishes rendering &lt;subject&gt;&apos;s scene
			</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When a camera finishes rendering &lt;subject&gt;&apos;s scene
			</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnRenderObject</Slot>
          <Id>51</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>OnSerializeNetworkView on &lt;subject&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>OnSerializeNetworkView on &lt;subject&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnSerializeNetworkView</Slot>
          <Id>52</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>OnServerInitialized on &lt;subject&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>OnServerInitialized on &lt;subject&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnServerInitialized</Slot>
          <Id>53</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When &lt;subject&gt; is entered by &lt;Triggering Object&gt;
			</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When &lt;subject&gt; is entered by &lt;Triggering Object&gt;
			</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnTriggerEnter</Slot>
          <Id>54</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
                <Type>Prefab</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When &lt;subject&gt; is exited by &lt;Triggering Object&gt;
			</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When &lt;subject&gt; is exited by &lt;Triggering Object&gt;
			</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnTriggerExit</Slot>
          <Id>55</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>While &lt;subject&gt; overlaps &lt;Triggering Object&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>While &lt;subject&gt; overlaps &lt;Triggering Object&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnTriggerStay</Slot>
          <Id>56</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>OnWillRenderObject on &lt;subject&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>OnWillRenderObject on &lt;subject&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>OnWillRenderObject</Slot>
          <Id>57</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>After &lt;subject&gt; is created</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>After &lt;subject&gt; is created</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>Start</Slot>
          <Id>59</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="children"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When &lt;subject&gt; is activated</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When &lt;subject&gt; is activated</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>ScriptEase</Subject>
          <Slot>Start</Slot>
          <Id>267</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>ScriptEase</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
              <Binding flavour="automatic"/>
            </KnowIt>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>storyPoint</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEStory.AddEnableFunctionToStoryPoint(</Literal>
              <Scope data="ARGUMENT" ref="subject">
                <Fragment data="NAME" legalValues="^[a-zA-Z]+[0-9a-zA-Z]*"/>
              </Scope>
              <Literal>, function(){</Literal>
            </Line>
            <Indent>
              <FormatRef data="NONE" ref="children"/>
            </Indent>
            <Line>
              <Literal>});</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When &lt;subject&gt; succeeds</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children>
        <Note>
          <Name>This cause occurs once this Story Point is no longer active and before its children are activated</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
        </Note>
      </Children>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When &lt;subject&gt; succeeds</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>ScriptEase</Subject>
          <Slot>Start</Slot>
          <Id>268</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>ScriptEase</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
              <Binding flavour="automatic"/>
            </KnowIt>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>storyPoint</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEStory.AddSucceedFunctionToStoryPoint(</Literal>
              <Scope data="ARGUMENT" ref="subject">
                <Fragment data="NAME" legalValues="^[a-zA-Z]+[0-9a-zA-Z]*"/>
              </Scope>
              <Literal>, function(){</Literal>
            </Line>
            <Indent>
              <FormatRef data="NONE" ref="children"/>
            </Indent>
            <Line>
              <Literal>});</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When &lt;subject&gt; fails</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels>
        <Label></Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When &lt;subject&gt; fails</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>ScriptEase</Subject>
          <Slot>Start</Slot>
          <Id>269</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>ScriptEase</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
              <Binding flavour="automatic"/>
            </KnowIt>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>storyPoint</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEStory.AddFailFunctionToStoryPoint(</Literal>
              <Scope data="ARGUMENT" ref="subject">
                <Fragment data="NAME" legalValues="^[a-zA-Z]+[0-9a-zA-Z]*"/>
              </Scope>
              <Literal>, function(){</Literal>
            </Line>
            <Indent>
              <FormatRef data="NONE" ref="children"/>
            </Indent>
            <Line>
              <Literal>});</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When &lt;subject&gt; starts</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When &lt;subject&gt; starts</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>ScriptEase</Subject>
          <Slot>Start</Slot>
          <Id>270</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>ScriptEase</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
              <Binding flavour="automatic"/>
            </KnowIt>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Dialogue</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEDialogue.AddOnStartFunction(</Literal>
              <Scope data="ARGUMENT" ref="subject">
                <Fragment data="NAME" legalValues="^[a-zA-Z]+[0-9a-zA-Z]*"/>
              </Scope>
              <Literal>, function(){</Literal>
            </Line>
            <Indent>
              <FormatRef data="NONE" ref="children"/>
            </Indent>
            <Line>
              <Literal>});</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When &lt;subject&gt; ends</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When &lt;subject&gt; ends</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>ScriptEase</Subject>
          <Slot>Start</Slot>
          <Id>271</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>ScriptEase</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
              <Binding flavour="automatic"/>
            </KnowIt>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Dialogue</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEDialogue.AddOnFinishedFunction(</Literal>
              <Scope data="ARGUMENT" ref="subject">
                <Fragment data="NAME" legalValues="^[a-zA-Z]+[0-9a-zA-Z]*"/>
              </Scope>
              <Literal>, function(){</Literal>
            </Line>
            <Indent>
              <FormatRef data="NONE" ref="children"/>
            </Indent>
            <Line>
              <Literal>});</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
    <CauseIt>
      <Name>When &lt;subject&gt; is reached</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When &lt;subject&gt; is reached</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Subject>ScriptEase</Subject>
          <Slot>Start</Slot>
          <Id>272</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>ScriptEase</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
              <Binding flavour="automatic"/>
            </KnowIt>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>DialogueLine</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEDialogue.AddWhenReachedFunction(</Literal>
              <Scope data="ARGUMENT" ref="subject">
                <Fragment data="NAME" legalValues="^[a-zA-Z]+[0-9a-zA-Z]*"/>
              </Scope>
              <Literal>, function(){</Literal>
            </Line>
            <Indent>
              <FormatRef data="NONE" ref="children"/>
            </Indent>
            <Line>
              <Literal>});</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
  </Causes>
  <Effects>
    <ScriptIt>
      <Name>Shoot &lt;Game Object&gt; at speed &lt;Right Speed&gt; rightwards, &lt;Up Speed&gt; upwards, and &lt;Forward Speed&gt; forwards</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Shoot &lt;Game Object&gt; at speed &lt;Right Speed&gt; rightwards, &lt;Up Speed&gt; upwards, and &lt;Forward Speed&gt; forwards</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>1</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Game Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Right Speed</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Up Speed</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Forward Speed</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEGameObject.Get.&lt;Rigidbody&gt;(</Literal>
              <Scope data="argument" ref="Game Object">
                <Fragment data="name"/>
              </Scope>
              <Literal>).velocity = transform.TransformDirection (Vector3(</Literal>
              <Scope data="argument" ref="Right Speed">
                <Fragment data="name"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Up Speed">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Forward Speed">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>));</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Find Object with Name</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels>
        <Label>UNUSED</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Find Object with Name</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>2</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Literal>GameObject.Find(&quot;</Literal>
            <Scope data="argument" ref="Object">
              <Fragment data="DisplayText" legalValues="[^\&quot;]*"/>
            </Scope>
            <Literal>&quot;)</Literal>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Change the &lt;Game Object&gt;&apos;s light colour to a random colour</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Change the &lt;Game Object&gt;&apos;s light colour to a random colour</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>6</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Game Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEGameObject.Get.&lt;Light&gt;(</Literal>
              <Scope data="argument" ref="Game Object">
                <Fragment data="name"/>
              </Scope>
              <Literal>).color = Color(Random.Range(0.0,1.0),Random.Range(0.0,1.0), Random.Range(0.0,1.0));</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Destroy &lt;Game Object&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Destroy &lt;Game Object&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>60</Id>
          <Types>
            <Type>GameObject</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Game Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>GameObject.Destroy(</Literal>
              <Scope data="argument" ref="Game Object">
                <Fragment data="name"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Change the &lt;Game Object&gt;&apos;s material colour to a random colour</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Change the &lt;Game Object&gt;&apos;s material colour to a random colour</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>61</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Game Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEGameObject.Get.&lt;Renderer&gt;(</Literal>
              <Scope data="argument" ref="Game Object">
                <Fragment data="name"/>
              </Scope>
              <Literal>).material.color = Color(Random.Range(0.0,1.0),Random.Range(0.0,1.0), Random.Range(0.0,1.0));</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>if pressed mouse button equals &lt;Mouse Button&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>if pressed mouse button equals &lt;Mouse Button&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>65</Id>
          <Types>
            <Type>question</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Mouse Button</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>MouseButton</Type>
              </Types>
              <Binding flavour="constant">
                <Type>MouseButton</Type>
                <Value>0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return Input.GetMouseButton(</Literal>
              <Scope data="argument" ref="Mouse Button">
                <Fragment data="name"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>if clicked mouse button equals &lt;Mouse Button&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>if clicked mouse button equals &lt;Mouse Button&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>62</Id>
          <Types>
            <Type>question</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Mouse Button</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>MouseButton</Type>
              </Types>
              <Binding flavour="constant">
                <Type>MouseButton</Type>
                <Value>0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return Input.GetMouseButtonDown(</Literal>
              <Scope data="argument" ref="Mouse Button">
                <Fragment data="name"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Write &lt;Text&gt; to the Unity Console</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Write &lt;Text&gt; to the Unity Console</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>107</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Text</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>String</Type>
              </Types>
              <Binding flavour="constant">
                <Type>String</Type>
                <Value></Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>Debug.Log(</Literal>
              <Scope data="argument" ref="Text">
                <Fragment data="name"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>if button on &lt;GUI&gt; labelled &lt;Text&gt; on the screen at &lt;x&gt;, &lt;y&gt; with width &lt;width&gt; and height &lt;height&gt; is clicked</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>if button on &lt;GUI&gt; labelled &lt;Text&gt; on the screen at &lt;x&gt;, &lt;y&gt; with width &lt;width&gt; and height &lt;height&gt; is clicked</Name>
          <Visible>false</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>113</Id>
          <Types>
            <Type>question</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Text</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>String</Type>
              </Types>
              <Binding flavour="constant">
                <Type>String</Type>
                <Value></Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>x</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>y</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>width</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>height</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>GUI</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GUI</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return GUI.Button(Rect(</Literal>
              <Scope data="argument" ref="x">
                <Fragment data="name"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="argument" ref="y">
                <Fragment data="name"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="argument" ref="width">
                <Fragment data="name"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="argument" ref="height">
                <Fragment data="name"/>
              </Scope>
              <Literal>), </Literal>
              <Scope data="argument" ref="Text">
                <Fragment data="name"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Succeed &lt;Story Point&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Succeed &lt;Story Point&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>115</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Story Point</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>storyPoint</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEStory.SucceedStoryPoint(</Literal>
              <Scope data="ARGUMENT" ref="Story Point">
                <Fragment data="NAME" legalValues="^[a-zA-Z]+[0-9a-zA-Z]*"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Continue at &lt;Story Point&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Continue at &lt;Story Point&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>116</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Story Point</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>storyPoint</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEStory.ContinueAtStoryPoint(</Literal>
              <Scope data="ARGUMENT" ref="Story Point">
                <Fragment data="NAME" legalValues="^[a-zA-Z]+[0-9a-zA-Z]*"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Fail &lt;Story Point&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Fail &lt;Story Point&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>117</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Story Point</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>storyPoint</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEStory.FailStoryPoint(</Literal>
              <Scope data="ARGUMENT" ref="Story Point">
                <Fragment data="NAME" legalValues="^[a-zA-Z]+[0-9a-zA-Z]*"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>if &lt;Story Point&gt; is active</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>if &lt;Story Point&gt; is active</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>118</Id>
          <Types>
            <Type>question</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Story Point</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>storyPoint</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return SEStory.IsEnabled(</Literal>
              <Scope data="ARGUMENT" ref="Story Point">
                <Fragment data="NAME" legalValues="^[a-zA-Z]+[0-9a-zA-Z]*"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>if &lt;Story Point&gt; has succeeded</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>if &lt;Story Point&gt; has succeeded</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>119</Id>
          <Types>
            <Type>question</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Story Point</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>storyPoint</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return SEStory.HasSucceeded(</Literal>
              <Scope data="ARGUMENT" ref="Story Point">
                <Fragment data="NAME" legalValues="^[a-zA-Z]+[0-9a-zA-Z]*"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>if &lt;Story Point&gt; has failed</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>if &lt;Story Point&gt; has failed</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>120</Id>
          <Types>
            <Type>question</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Story Point</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>storyPoint</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return SEStory.HasFailed(</Literal>
              <Scope data="ARGUMENT" ref="Story Point">
                <Fragment data="NAME" legalValues="^[a-zA-Z]+[0-9a-zA-Z]*"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Draw a label on &lt;GUI&gt; with text &lt;Text&gt; at &lt;x&gt;, &lt;y&gt; that is &lt;width&gt; wide and &lt;length&gt; long</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Draw a label on &lt;GUI&gt; with text &lt;Text&gt; at &lt;x&gt;, &lt;y&gt; that is &lt;width&gt; wide and &lt;length&gt; long</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>121</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Text</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>String</Type>
              </Types>
              <Binding flavour="constant">
                <Type>String</Type>
                <Value></Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>x</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>y</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>width</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>length</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>GUI</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GUI</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>GUI.Label(Rect(</Literal>
              <Scope data="ARGUMENT" ref="x">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="y">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="width">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="length">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>), </Literal>
              <Scope data="ARGUMENT" ref="Text">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Draw a box on &lt;GUI&gt; at &lt;x&gt;, &lt;y&gt; that is &lt;width&gt; wide and &lt;length&gt; long</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Draw a box on &lt;GUI&gt; at &lt;x&gt;, &lt;y&gt; that is &lt;width&gt; wide and &lt;length&gt; long</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>122</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>x</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>y</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>width</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>length</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>GUI</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GUI</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>GUI.Box(Rect(</Literal>
              <Scope data="ARGUMENT" ref="x">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="y">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="width">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="length">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>), &quot;&quot;);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>the width of the screen</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>the width of the screen</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>123</Id>
          <Types>
            <Type>float</Type>
          </Types>
          <Code>
            <Line>
              <Literal>return Screen.width;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>the height of the screen</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>the height of the screen</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>124</Id>
          <Types>
            <Type>float</Type>
          </Types>
          <Code>
            <Line>
              <Literal>return Screen.height;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Number One&gt; plus &lt;Number Two&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Number One&gt; plus &lt;Number Two&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>125</Id>
          <Types>
            <Type>float</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Number One</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Number Two</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return </Literal>
              <Scope data="ARGUMENT" ref="Number One">
                <Fragment data="NAME"/>
              </Scope>
              <Literal> + </Literal>
              <Scope data="ARGUMENT" ref="Number Two">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Number One&gt; minus &lt;Number Two&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Number One&gt; minus &lt;Number Two&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>126</Id>
          <Types>
            <Type>float</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Number One</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Number Two</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return </Literal>
              <Scope data="ARGUMENT" ref="Number One">
                <Fragment data="NAME"/>
              </Scope>
              <Literal> - </Literal>
              <Scope data="ARGUMENT" ref="Number Two">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Number One&gt; multiplied by &lt;Number Two&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Number One&gt; multiplied by &lt;Number Two&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>127</Id>
          <Types>
            <Type>float</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Number One</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Number Two</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return </Literal>
              <Scope data="ARGUMENT" ref="Number One">
                <Fragment data="NAME"/>
              </Scope>
              <Literal> * </Literal>
              <Scope data="ARGUMENT" ref="Number Two">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Number One&gt; divided by &lt;Number Two&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Number One&gt; divided by &lt;Number Two&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>128</Id>
          <Types>
            <Type>float</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Number One</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Number Two</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return </Literal>
              <Scope data="ARGUMENT" ref="Number One">
                <Fragment data="NAME"/>
              </Scope>
              <Literal> / </Literal>
              <Scope data="ARGUMENT" ref="Number Two">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Lock&gt; &lt;Object&gt;&apos;s camera</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Lock&gt; &lt;Object&gt;&apos;s camera</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>129</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Lock</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>LockUnlock</Type>
              </Types>
              <Binding flavour="constant">
                <Type>LockUnlock</Type>
                <Value>true</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEGameObject.Get.&lt;MouseLook&gt;(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).locked = </Literal>
              <Scope data="ARGUMENT" ref="Lock">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Hide&gt; the Mouse Cursor</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Hide&gt; the Mouse Cursor</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>130</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Hide</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>ShowHide</Type>
              </Types>
              <Binding flavour="constant">
                <Type>ShowHide</Type>
                <Value>true</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>Screen.lockCursor = </Literal>
              <Scope data="ARGUMENT" ref="Hide">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Disable&gt; &lt;Object&gt;&apos;s collider</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Disable&gt; &lt;Object&gt;&apos;s collider</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>132</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Disable</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>EnableDisable</Type>
              </Types>
              <Binding flavour="constant">
                <Type>EnableDisable</Type>
                <Value>false</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEGameObject.Get.&lt;Collider&gt;(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).enabled =</Literal>
              <Scope data="ARGUMENT" ref="Disable">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Set &lt;Object&gt;&apos;s position to &lt;x&gt;, &lt;y&gt;, &lt;z&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Set &lt;Object&gt;&apos;s position to &lt;x&gt;, &lt;y&gt;, &lt;z&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>133</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>x</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>y</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>z</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.transform.localPosition = Vector3(</Literal>
              <Scope data="ARGUMENT" ref="x">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>,</Literal>
              <Scope data="ARGUMENT" ref="y">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>,</Literal>
              <Scope data="ARGUMENT" ref="z">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Set &lt;Object&gt;&apos;s Euler Angles to &lt;x&gt;, &lt;y&gt;, &lt;z&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Set &lt;Object&gt;&apos;s Euler Angles to &lt;x&gt;, &lt;y&gt;, &lt;z&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>134</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>x</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>y</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>z</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.transform.localEulerAngles = Vector3(</Literal>
              <Scope data="ARGUMENT" ref="x">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="y">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="z">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Set the &lt;Object&gt;&apos;s parent to &lt;Parent&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Set the &lt;Object&gt;&apos;s parent to &lt;Parent&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>135</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Parent</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.transform.parent = </Literal>
              <Scope data="ARGUMENT" ref="Parent">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.transform;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Play &lt;Object&gt;&apos;s &lt;Animation&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Play &lt;Object&gt;&apos;s &lt;Animation&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>136</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Animation</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Animation</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.animation.Play(</Literal>
              <Scope data="ARGUMENT" ref="Animation">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Set &lt;Object&gt;&apos;s &lt;Animation&gt; wrap mode to &lt;Wrap Mode&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Set &lt;Object&gt;&apos;s &lt;Animation&gt; wrap mode to &lt;Wrap Mode&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>137</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Animation</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Animation</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Wrap Mode</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>WrapMode</Type>
              </Types>
              <Binding flavour="constant">
                <Type>WrapMode</Type>
                <Value>WrapMode.Loop</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.animation[</Literal>
              <Scope data="ARGUMENT" ref="Animation">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>].wrapMode = </Literal>
              <Scope data="ARGUMENT" ref="Wrap Mode">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Enable&gt; &lt;Object&gt;&apos;s kinematic property</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Enable&gt; &lt;Object&gt;&apos;s kinematic property</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>138</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Enable</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>EnableDisable</Type>
              </Types>
              <Binding flavour="constant">
                <Type>EnableDisable</Type>
                <Value>true</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEGameObject.Get.&lt;Rigidbody&gt;(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).isKinematic = </Literal>
              <Scope data="ARGUMENT" ref="Enable">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Draw an &lt;Image&gt; on &lt;GUI&gt; at position &lt;x&gt;, &lt;y&gt; that &lt;Scale&gt;s to be &lt;width&gt; wide and &lt;length&gt; long 			</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Draw an &lt;Image&gt; on &lt;GUI&gt; at position &lt;x&gt;, &lt;y&gt; that &lt;Scale&gt;s to be &lt;width&gt; wide and &lt;length&gt; long 			</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>139</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Image</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Image</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>x</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>y</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>width</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>length</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Scale</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>ScaleMode</Type>
              </Types>
              <Binding flavour="constant">
                <Type>ScaleMode</Type>
                <Value>ScaleMode.ScaleToFit</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>GUI</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GUI</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>GUI.DrawTexture(Rect(</Literal>
              <Scope data="ARGUMENT" ref="x">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="y">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="width">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="length">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>), </Literal>
              <Scope data="ARGUMENT" ref="Image">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>,</Literal>
              <Scope data="ARGUMENT" ref="Scale">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, true, 0);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>if &lt;Object 1&gt; and &lt;Object 2&gt; are equal</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>if &lt;Object 1&gt; and &lt;Object 2&gt; are equal</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>140</Id>
          <Types>
            <Type>question</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object 1</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Object 2</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return </Literal>
              <Scope data="ARGUMENT" ref="Object 1">
                <Fragment data="NAME"/>
              </Scope>
              <Literal> == </Literal>
              <Scope data="ARGUMENT" ref="Object 2">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Remember &lt;Text&gt; as &lt;Key&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Remember &lt;Text&gt; as &lt;Key&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>141</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Text</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>String</Type>
              </Types>
              <Binding flavour="constant">
                <Type>String</Type>
                <Value></Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Key</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>String</Type>
              </Types>
              <Binding flavour="constant">
                <Type>String</Type>
                <Value></Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEVariable.PutString(</Literal>
              <Scope data="ARGUMENT" ref="Key">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Text">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Remember &lt;Number&gt; as &lt;Key&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Remember &lt;Number&gt; as &lt;Key&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>142</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Number</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Key</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>String</Type>
              </Types>
              <Binding flavour="constant">
                <Type>String</Type>
                <Value></Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEVariable.PutFloat(</Literal>
              <Scope data="ARGUMENT" ref="Key">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Number">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Remember &lt;Object&gt; as &lt;Key&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Remember &lt;Object&gt; as &lt;Key&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>143</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Key</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>String</Type>
              </Types>
              <Binding flavour="constant">
                <Type>String</Type>
                <Value></Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEVariable.PutGameObject(</Literal>
              <Scope data="ARGUMENT" ref="Key">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>remembered &lt;Key&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>remembered &lt;Key&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>145</Id>
          <Types>
            <Type>String</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Key</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>String</Type>
              </Types>
              <Binding flavour="constant">
                <Type>String</Type>
                <Value></Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return SEVariable.GetString(</Literal>
              <Scope data="ARGUMENT" ref="Key">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>remembered &lt;Key&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>remembered &lt;Key&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>146</Id>
          <Types>
            <Type>float</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Key</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>String</Type>
              </Types>
              <Binding flavour="constant">
                <Type>String</Type>
                <Value></Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return SEVariable.GetFloat(</Literal>
              <Scope data="ARGUMENT" ref="Key">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>remembered &lt;Key&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>remembered &lt;Key&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>147</Id>
          <Types>
            <Type>GameObject</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Key</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>String</Type>
              </Types>
              <Binding flavour="constant">
                <Type>String</Type>
                <Value></Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return SEVariable.GetGameObject(</Literal>
              <Scope data="ARGUMENT" ref="Key">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Execute the method &lt;Method&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Execute the method &lt;Method&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>148</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Method</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Method</Type>
              </Types>
              <Binding flavour="constant">
                <Type>Method</Type>
                <Value></Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Scope data="ARGUMENT" ref="Method">
                <Fragment data="VALUE"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Position&gt;&apos;s x coordinate</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Position&gt;&apos;s x coordinate</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>149</Id>
          <Types>
            <Type>float</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Position</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Vector3</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return </Literal>
              <Scope data="ARGUMENT" ref="Position">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.x;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Position&gt;&apos;s y coordinate</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Position&gt;&apos;s y coordinate</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>150</Id>
          <Types>
            <Type>float</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Position</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Vector3</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return </Literal>
              <Scope data="ARGUMENT" ref="Position">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.y;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Position&gt;&apos;s z coordinate</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Position&gt;&apos;s z coordinate</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>151</Id>
          <Types>
            <Type>float</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Position</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Vector3</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return </Literal>
              <Scope data="ARGUMENT" ref="Position">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.z;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Object&gt;&apos;s position</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Object&gt;&apos;s position</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>152</Id>
          <Types>
            <Type>Vector3</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return </Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.transform.position;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>a number between &lt;First Number&gt; and &lt;Second Number&gt;
			</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>a number between &lt;First Number&gt; and &lt;Second Number&gt;
			</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>153</Id>
          <Types>
            <Type>float</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>First Number</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Second Number</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return Random.Range(</Literal>
              <Scope data="ARGUMENT" ref="First Number">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Second Number">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Number&gt; as text</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Number&gt; as text</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>154</Id>
          <Types>
            <Type>String</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Number</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return </Literal>
              <Scope data="ARGUMENT" ref="Number">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.ToString();</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Text 1&gt; followed by &lt;Text 2&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Text 1&gt; followed by &lt;Text 2&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>155</Id>
          <Types>
            <Type>String</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Text 1</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>String</Type>
              </Types>
              <Binding flavour="constant">
                <Type>String</Type>
                <Value></Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Text 2</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>String</Type>
              </Types>
              <Binding flavour="constant">
                <Type>String</Type>
                <Value></Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return </Literal>
              <Scope data="ARGUMENT" ref="Text 1">
                <Fragment data="NAME"/>
              </Scope>
              <Literal> + </Literal>
              <Scope data="ARGUMENT" ref="Text 2">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>if &lt;Object&gt;&apos;s &lt;Animation&gt; is playing</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>if &lt;Object&gt;&apos;s &lt;Animation&gt; is playing</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>156</Id>
          <Types>
            <Type>question</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Animation</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Animation</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return </Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.animation.IsPlaying(</Literal>
              <Scope data="ARGUMENT" ref="Animation">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Play &lt;Object&gt;&apos;s default animation</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Play &lt;Object&gt;&apos;s default animation</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>157</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.animation.Play();</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Stop playing all of &lt;Object&gt;&apos;s animations</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Stop playing all of &lt;Object&gt;&apos;s animations</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>158</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="INCLUDE"/>
              </Scope>
              <Literal>.animation.Stop();</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Stop playing &lt;Object&gt;&apos;s &lt;Animation&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Stop playing &lt;Object&gt;&apos;s &lt;Animation&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>159</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Animation</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Animation</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.animation.Stop(</Literal>
              <Scope data="ARGUMENT" ref="Animation">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Fade in &lt;Object&gt;&apos;s &lt;Animation&gt; over &lt;Number&gt; seconds</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Fade in &lt;Object&gt;&apos;s &lt;Animation&gt; over &lt;Number&gt; seconds</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>160</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Animation</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Animation</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Number</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.animation.CrossFade(</Literal>
              <Scope data="ARGUMENT" ref="Animation">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Number">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Allow&gt; &lt;Object&gt;&apos;s default animation to play automatically</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Allow&gt; &lt;Object&gt;&apos;s default animation to play automatically</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>161</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Allow</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>AllowDisallow</Type>
              </Types>
              <Binding flavour="constant">
                <Type>AllowDisallow</Type>
                <Value>true</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.animation.playAutomatically = </Literal>
              <Scope data="ARGUMENT" ref="Allow">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Object&gt;&apos;s name</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Object&gt;&apos;s name</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>162</Id>
          <Types>
            <Type>String</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return </Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.name;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Rewind &lt;Object&gt;&apos;s &lt;Animation&gt; to start</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Rewind &lt;Object&gt;&apos;s &lt;Animation&gt; to start</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>163</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Animation</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Animation</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.animation.Rewind(</Literal>
              <Scope data="ARGUMENT" ref="Animation">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Rewind all of &lt;Object&gt;&apos;s animations to start</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Rewind all of &lt;Object&gt;&apos;s animations to start</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>164</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.animation.Rewind();</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Blend &lt;Object&gt;&apos;s &lt;Animation&gt; towards a weight of &lt;Weight&gt; over the next &lt;Seconds&gt; seconds</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Blend &lt;Object&gt;&apos;s &lt;Animation&gt; towards a weight of &lt;Weight&gt; over the next &lt;Seconds&gt; seconds</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>165</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Animation</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Animation</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Weight</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Seconds</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.animation.Blend(</Literal>
              <Scope data="ARGUMENT" ref="Animation">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Weight">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Seconds">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>if &lt;Number One&gt; is &lt;Operator&gt; &lt;Number Two&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>if &lt;Number One&gt; is &lt;Operator&gt; &lt;Number Two&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>166</Id>
          <Types>
            <Type>question</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Number One</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Operator</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>number_operator</Type>
              </Types>
              <Binding flavour="constant">
                <Type>number_operator</Type>
                <Value>0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Number Two</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>var numberOperator:int = </Literal>
              <Scope data="argument" ref="Operator">
                <Fragment data="name"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
            <Line>
              <Literal>if(numberOperator == 0)</Literal>
            </Line>
            <Indent>
              <Line>
                <Literal>return </Literal>
                <Scope data="argument" ref="Number One">
                  <Fragment data="name"/>
                </Scope>
                <Literal> &gt; </Literal>
                <Scope data="argument" ref="Number Two">
                  <Fragment data="name"/>
                </Scope>
                <Literal>;</Literal>
              </Line>
            </Indent>
            <Line>
              <Literal>else if(numberOperator == 1)</Literal>
            </Line>
            <Indent>
              <Line>
                <Literal>return </Literal>
                <Scope data="argument" ref="Number One">
                  <Fragment data="name"/>
                </Scope>
                <Literal> &lt; </Literal>
                <Scope data="argument" ref="Number Two">
                  <Fragment data="name"/>
                </Scope>
                <Literal>;</Literal>
              </Line>
            </Indent>
            <Line>
              <Literal>else if(numberOperator == 2)</Literal>
            </Line>
            <Indent>
              <Line>
                <Literal>return </Literal>
                <Scope data="argument" ref="Number One">
                  <Fragment data="name"/>
                </Scope>
                <Literal> == </Literal>
                <Scope data="argument" ref="Number Two">
                  <Fragment data="name"/>
                </Scope>
                <Literal>;</Literal>
              </Line>
            </Indent>
            <Line>
              <Literal>else if(numberOperator == 3)</Literal>
            </Line>
            <Indent>
              <Line>
                <Literal>return </Literal>
                <Scope data="argument" ref="Number One">
                  <Fragment data="name"/>
                </Scope>
                <Literal> &gt;= </Literal>
                <Scope data="argument" ref="Number Two">
                  <Fragment data="name"/>
                </Scope>
                <Literal>;</Literal>
              </Line>
            </Indent>
            <Line>
              <Literal>else if(numberOperator == 4)</Literal>
            </Line>
            <Indent>
              <Line>
                <Literal>return </Literal>
                <Scope data="argument" ref="Number One">
                  <Fragment data="name"/>
                </Scope>
                <Literal> &lt;= </Literal>
                <Scope data="argument" ref="Number Two">
                  <Fragment data="name"/>
                </Scope>
                <Literal>;</Literal>
              </Line>
            </Indent>
            <Line>
              <Literal>else</Literal>
            </Line>
            <Indent>
              <Line>
                <Literal>return false;</Literal>
              </Line>
            </Indent>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Add force that moves &lt;Object&gt; &lt;x&gt; rightwards, &lt;y&gt; upwards, and &lt;z&gt; forwards on the global coordinate system</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Add force that moves &lt;Object&gt; &lt;x&gt; rightwards, &lt;y&gt; upwards, and &lt;z&gt; forwards on the global coordinate system</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>168</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>x</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>y</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>z</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEGameObject.Get.&lt;Rigidbody&gt;(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).AddForce(</Literal>
              <Scope data="ARGUMENT" ref="x">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="y">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="z">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Add torque that spins &lt;Object&gt; &lt;x&gt; rightwards, &lt;y&gt; upwards, and &lt;z&gt; forwards on the global coordinate system</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Add torque that spins &lt;Object&gt; &lt;x&gt; rightwards, &lt;y&gt; upwards, and &lt;z&gt; forwards on the global coordinate system</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>169</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>x</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>y</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>z</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEGameObject.Get.&lt;Rigidbody&gt;(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).AddTorque(</Literal>
              <Scope data="ARGUMENT" ref="x">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="y">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="z">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Move &lt;Object&gt; to &lt;Position&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Move &lt;Object&gt; to &lt;Position&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>170</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Position</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Vector3</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEGameObject.Get.&lt;Rigidbody&gt;(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).MovePosition(</Literal>
              <Scope data="ARGUMENT" ref="Position">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Add force that moves &lt;Object&gt; &lt;x&gt; rightwards, &lt;y&gt; upwards, and &lt;z&gt; forwards on its local coordinate system</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Add force that moves &lt;Object&gt; &lt;x&gt; rightwards, &lt;y&gt; upwards, and &lt;z&gt; forwards on its local coordinate system</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>171</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>x</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>y</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>z</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEGameObject.Get.&lt;Rigidbody&gt;(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).AddRelativeForce(</Literal>
              <Scope data="ARGUMENT" ref="x">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="y">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="z">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Add torque that spins &lt;Object&gt; &lt;x&gt; rightwards, &lt;y&gt; upwards, and &lt;z&gt; forwards on its local coordinate system</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Add torque that spins &lt;Object&gt; &lt;x&gt; rightwards, &lt;y&gt; upwards, and &lt;z&gt; forwards on its local coordinate system</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>172</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>x</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>y</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>z</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEGameObject.Get.&lt;Rigidbody&gt;(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).AddRelativeTorque(</Literal>
              <Scope data="ARGUMENT" ref="x">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="" ref="y">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="" ref="z">
                <Fragment data="INCLUDE"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Set the density of &lt;Object&gt; to &lt;Density&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Set the density of &lt;Object&gt; to &lt;Density&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>173</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Density</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEGameObject.Get.&lt;Rigidbody&gt;(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).SetDensity(</Literal>
              <Scope data="ARGUMENT" ref="Density">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Add force to &lt;Object&gt; to &lt;Position&gt; from &lt;Source&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Add force to &lt;Object&gt; to &lt;Position&gt; from &lt;Source&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>174</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Position</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Vector3</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Source</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Vector3</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEGameObject.Get.&lt;Rigidbody&gt;(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).AddForceAtPosition(</Literal>
              <Scope data="ARGUMENT" ref="Position">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Source">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>a position at &lt;x&gt;, &lt;y&gt;, &lt;z&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>a position at &lt;x&gt;, &lt;y&gt;, &lt;z&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>175</Id>
          <Types>
            <Type>Vector3</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>x</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>y</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>z</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return new Vector3(</Literal>
              <Scope data="ARGUMENT" ref="x">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="y">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>z);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>the distance between &lt;Position One&gt; and &lt;Position Two&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>the distance between &lt;Position One&gt; and &lt;Position Two&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>176</Id>
          <Types>
            <Type>float</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Position One</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Vector3</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Position Two</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Vector3</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return Vector3.Distance(</Literal>
              <Scope data="ARGUMENT" ref="Position One">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Position Two">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>the smallest angle between &lt;Position One&gt; and &lt;Position Two&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>the smallest angle between &lt;Position One&gt; and &lt;Position Two&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>177</Id>
          <Types>
            <Type>float</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Position One</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Vector3</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Position Two</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Vector3</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return Vector3.Angle(</Literal>
              <Scope data="ARGUMENT" ref="Position One">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Position Two">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>if &lt;Position One&gt; and &lt;Position Two&gt; are equal</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>if &lt;Position One&gt; and &lt;Position Two&gt; are equal</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>179</Id>
          <Types>
            <Type>question</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Position One</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Vector3</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Position Two</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Vector3</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return </Literal>
              <Scope data="ARGUMENT" ref="Position One">
                <Fragment data="NAME"/>
              </Scope>
              <Literal> == </Literal>
              <Scope data="ARGUMENT" ref="Position Two">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Add a force to &lt;Object&gt; that explodes from &lt;Position&gt; with strength &lt;Strength&gt; and radius &lt;Radius&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Add a force to &lt;Object&gt; that explodes from &lt;Position&gt; with strength &lt;Strength&gt; and radius &lt;Radius&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>180</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Position</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Vector3</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Strength</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Radius</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEGameObject.Get.&lt;Rigidbody&gt;(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).AddExplosionForce(</Literal>
              <Scope data="ARGUMENT" ref="Strength">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Position">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Radius">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>); </Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Disable&gt; gravity&apos;s effect on &lt;Object&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Disable&gt; gravity&apos;s effect on &lt;Object&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>181</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>Disable</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>EnableDisable</Type>
              </Types>
              <Binding flavour="constant">
                <Type>EnableDisable</Type>
                <Value>false</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEGameObject.Get.&lt;Rigidbody&gt;(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).useGravity = </Literal>
              <Scope data="ARGUMENT" ref="Disable">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Set the &lt;GUI&gt;&apos;s skin to &lt;Skin&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Set the &lt;GUI&gt;&apos;s skin to &lt;Skin&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>182</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>Skin</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GUISkin</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>GUI</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GUI</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>GUI.skin = </Literal>
              <Scope data="ARGUMENT" ref="skin">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>if button on &lt;GUI&gt; labelled &lt;Text&gt; on the screen at automatic position is clicked</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>if button on &lt;GUI&gt; labelled &lt;Text&gt; on the screen at automatic position is clicked</Name>
          <Visible>false</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>183</Id>
          <Types>
            <Type>question</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Text</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>String</Type>
              </Types>
              <Binding flavour="constant">
                <Type>String</Type>
                <Value></Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>GUI</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GUI</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return GUILayout.Button(</Literal>
              <Scope data="argument" ref="Text">
                <Fragment data="name"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>if button on &lt;GUI&gt; with image &lt;Image&gt; on the screen at &lt;x&gt;, &lt;y&gt; with width &lt;width&gt; and height &lt;height&gt; is clicked</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>if button on &lt;GUI&gt; with image &lt;Image&gt; on the screen at &lt;x&gt;, &lt;y&gt; with width &lt;width&gt; and height &lt;height&gt; is clicked</Name>
          <Visible>false</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>184</Id>
          <Types>
            <Type>question</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Image</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Image</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>x</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>y</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>width</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>height</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>GUI</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GUI</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return GUI.Button(Rect(</Literal>
              <Scope data="argument" ref="x">
                <Fragment data="name"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="argument" ref="y">
                <Fragment data="name"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="argument" ref="width">
                <Fragment data="name"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="argument" ref="height">
                <Fragment data="name"/>
              </Scope>
              <Literal>), </Literal>
              <Scope data="argument" ref="Image">
                <Fragment data="name"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>if button on &lt;GUI&gt; with image &lt;Image&gt; on the screen at automatic position is clicked</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>if button on &lt;GUI&gt; with image &lt;Image&gt; on the screen at automatic position is clicked</Name>
          <Visible>false</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>185</Id>
          <Types>
            <Type>question</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Image</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Image</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>GUI</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GUI</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return GUILayout.Button(</Literal>
              <Scope data="argument" ref="Image">
                <Fragment data="name"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>if button on &lt;GUI&gt; labelled &lt;Text&gt; on the screen at &lt;x&gt;, &lt;y&gt; with width &lt;width&gt; and height &lt;height&gt; with initial value &lt;Enabled&gt;d is toggled</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>if button on &lt;GUI&gt; labelled &lt;Text&gt; on the screen at &lt;x&gt;, &lt;y&gt; with width &lt;width&gt; and height &lt;height&gt; with initial value &lt;Enabled&gt;d is toggled</Name>
          <Visible>false</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>186</Id>
          <Types>
            <Type>question</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Text</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>String</Type>
              </Types>
              <Binding flavour="constant">
                <Type>String</Type>
                <Value></Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>x</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>y</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>width</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>height</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Enabled</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>EnableDisable</Type>
              </Types>
              <Binding flavour="constant">
                <Type>EnableDisable</Type>
                <Value>true</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>GUI</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GUI</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return GUI.Toggle(Rect(</Literal>
              <Scope data="argument" ref="x">
                <Fragment data="name"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="argument" ref="y">
                <Fragment data="name"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="argument" ref="width">
                <Fragment data="name"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="argument" ref="height">
                <Fragment data="name"/>
              </Scope>
              <Literal>), </Literal>
              <Scope data="argument" ref="Enabled">
                <Fragment data="name"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="argument" ref="Text">
                <Fragment data="name"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>if button on &lt;GUI&gt; labelled &lt;Text&gt; on the screen at automatic position with initial value &lt;Enabled&gt;d is toggled</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>if button on &lt;GUI&gt; labelled &lt;Text&gt; on the screen at automatic position with initial value &lt;Enabled&gt;d is toggled</Name>
          <Visible>false</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>187</Id>
          <Types>
            <Type>question</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Enabled</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>EnableDisable</Type>
              </Types>
              <Binding flavour="constant">
                <Type>EnableDisable</Type>
                <Value>true</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Text</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>String</Type>
              </Types>
              <Binding flavour="constant">
                <Type>String</Type>
                <Value></Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>GUI</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GUI</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return GUILayout.Toggle(</Literal>
              <Scope data="argument" ref="Enabled">
                <Fragment data="name"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="argument" ref="Text">
                <Fragment data="name"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>if button on &lt;GUI&gt; with image &lt;Image&gt; on the screen at &lt;x&gt;, &lt;y&gt; with width &lt;width&gt; and height &lt;height&gt; with initial value &lt;Enabled&gt;d is toggled</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>if button on &lt;GUI&gt; with image &lt;Image&gt; on the screen at &lt;x&gt;, &lt;y&gt; with width &lt;width&gt; and height &lt;height&gt; with initial value &lt;Enabled&gt;d is toggled</Name>
          <Visible>false</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>188</Id>
          <Types>
            <Type>question</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Image</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Image</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>x</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>y</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>width</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>height</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Enabled</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>EnableDisable</Type>
              </Types>
              <Binding flavour="constant">
                <Type>EnableDisable</Type>
                <Value>true</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>GUI</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GUI</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return GUI.Toggle(Rect(</Literal>
              <Scope data="argument" ref="x">
                <Fragment data="name"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="argument" ref="y">
                <Fragment data="name"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="argument" ref="width">
                <Fragment data="name"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="argument" ref="height">
                <Fragment data="name"/>
              </Scope>
              <Literal>), </Literal>
              <Scope data="argument" ref="Enabled">
                <Fragment data="name"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="argument" ref="Image">
                <Fragment data="name"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>if button on &lt;GUI&gt; with image &lt;Image&gt; on the screen at automatic position with initial value &lt;Enabled&gt;d is toggled</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>if button on &lt;GUI&gt; with image &lt;Image&gt; on the screen at automatic position with initial value &lt;Enabled&gt;d is toggled</Name>
          <Visible>false</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>189</Id>
          <Types>
            <Type>question</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Image</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Image</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Enabled</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>EnableDisable</Type>
              </Types>
              <Binding flavour="constant">
                <Type>EnableDisable</Type>
                <Value>true</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>GUI</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GUI</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return GUILayout.Toggle(</Literal>
              <Scope data="argument" ref="Enabled">
                <Fragment data="name"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="argument" ref="Image">
                <Fragment data="name"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>if button on &lt;GUI&gt; labelled &lt;Text&gt; on the screen at &lt;x&gt;, &lt;y&gt; with width &lt;width&gt; and height &lt;height&gt; is held down</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>if button on &lt;GUI&gt; labelled &lt;Text&gt; on the screen at &lt;x&gt;, &lt;y&gt; with width &lt;width&gt; and height &lt;height&gt; is held down</Name>
          <Visible>false</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>190</Id>
          <Types>
            <Type>question</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Text</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>String</Type>
              </Types>
              <Binding flavour="constant">
                <Type>String</Type>
                <Value></Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>x</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>y</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>width</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>height</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>GUI</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GUI</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return GUI.RepeatButton(Rect(</Literal>
              <Scope data="argument" ref="x">
                <Fragment data="name"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="argument" ref="y">
                <Fragment data="name"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="argument" ref="width">
                <Fragment data="name"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="argument" ref="height">
                <Fragment data="name"/>
              </Scope>
              <Literal>), </Literal>
              <Scope data="argument" ref="Text">
                <Fragment data="name"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>if button on &lt;GUI&gt; labelled &lt;Text&gt; on the screen at automatic position is held down</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>if button on &lt;GUI&gt; labelled &lt;Text&gt; on the screen at automatic position is held down</Name>
          <Visible>false</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>191</Id>
          <Types>
            <Type>question</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Text</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>String</Type>
              </Types>
              <Binding flavour="constant">
                <Type>String</Type>
                <Value></Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>GUI</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GUI</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return GUILayout.RepeatButton(</Literal>
              <Scope data="argument" ref="Text">
                <Fragment data="name"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>if button on &lt;GUI&gt; with image &lt;Image&gt; on the screen at &lt;x&gt;, &lt;y&gt; with width &lt;width&gt; and height &lt;height&gt; is held down</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>if button on &lt;GUI&gt; with image &lt;Image&gt; on the screen at &lt;x&gt;, &lt;y&gt; with width &lt;width&gt; and height &lt;height&gt; is held down</Name>
          <Visible>false</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>192</Id>
          <Types>
            <Type>question</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Image</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Image</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>x</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>y</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>width</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>height</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>GUI</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GUI</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return GUI.RepeatButton(Rect(</Literal>
              <Scope data="argument" ref="x">
                <Fragment data="name"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="argument" ref="y">
                <Fragment data="name"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="argument" ref="width">
                <Fragment data="name"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="argument" ref="height">
                <Fragment data="name"/>
              </Scope>
              <Literal>), </Literal>
              <Scope data="argument" ref="Image">
                <Fragment data="name"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>if button on &lt;GUI&gt; with image &lt;Image&gt; on the screen at automatic position is held down</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>if button on &lt;GUI&gt; with image &lt;Image&gt; on the screen at automatic position is held down</Name>
          <Visible>false</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>193</Id>
          <Types>
            <Type>question</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Image</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Image</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>GUI</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GUI</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return GUILayout.RepeatButton(</Literal>
              <Scope data="argument" ref="Image">
                <Fragment data="name"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>the opposite of &lt;Question&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>the opposite of &lt;Question&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>194</Id>
          <Types>
            <Type>question</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Question</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>question</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return !</Literal>
              <Scope data="ARGUMENT" ref="Question">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>the Input Axis of &lt;InputAxisType&gt; type</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>the Input Axis of &lt;InputAxisType&gt; type</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>195</Id>
          <Types>
            <Type>float</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>InputAxisType</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>InputAxisType</Type>
              </Types>
              <Binding flavour="constant">
                <Type>InputAxisType</Type>
                <Value>&quot;Horizontal&quot;</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return Input.GetAxis(</Literal>
              <Scope data="ARGUMENT" ref="InputAxisType">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Move &lt;Object&gt; &lt;x&gt; rightwards, &lt;y&gt; upwards, and &lt;z&gt; forwards without accounting for frame rate</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Move &lt;Object&gt; &lt;x&gt; rightwards, &lt;y&gt; upwards, and &lt;z&gt; forwards without accounting for frame rate</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>196</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>x</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>y</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>z</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.transform.Translate(</Literal>
              <Scope data="ARGUMENT" ref="x">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>,</Literal>
              <Scope data="ARGUMENT" ref="y">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>,</Literal>
              <Scope data="ARGUMENT" ref="z">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Rotate &lt;Object&gt; &lt;x&gt; rightwards, &lt;y&gt; upwards, and &lt;z&gt; forwards without accounting for frame rate</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Rotate &lt;Object&gt; &lt;x&gt; rightwards, &lt;y&gt; upwards, and &lt;z&gt; forwards without accounting for frame rate</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>198</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>x</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>y</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>z</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.transform.Rotate(</Literal>
              <Scope data="ARGUMENT" ref="x">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>,</Literal>
              <Scope data="ARGUMENT" ref="y">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>,</Literal>
              <Scope data="ARGUMENT" ref="z">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>the time in seconds it took to complete the last frame</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>the time in seconds it took to complete the last frame</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>199</Id>
          <Types>
            <Type>float</Type>
          </Types>
          <Code>
            <Line>
              <Literal>return Time.deltaTime;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>the number &lt;number&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>the number &lt;number&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>200</Id>
          <Types>
            <Type>float</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>number</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return </Literal>
              <Scope data="ARGUMENT" ref="number">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>the &lt;number&gt; clamped between &lt;min&gt; and &lt;max&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>the &lt;number&gt; clamped between &lt;min&gt; and &lt;max&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>201</Id>
          <Types>
            <Type>float</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>number</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>min</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>max</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return Mathf.Clamp(</Literal>
              <Scope data="ARGUMENT" ref="number">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>,</Literal>
              <Scope data="ARGUMENT" ref="min">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>,</Literal>
              <Scope data="ARGUMENT" ref="max">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>if &lt;Key&gt; key was pressed</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>if &lt;Key&gt; key was pressed</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>202</Id>
          <Types>
            <Type>question</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Key</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>KeyCode</Type>
              </Types>
              <Binding flavour="constant">
                <Type>KeyCode</Type>
                <Value>KeyCode.None</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return Input.GetKeyDown(</Literal>
              <Scope data="ARGUMENT" ref="Key">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>the audio source attached to &lt;Object&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels>
        <Label></Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>the audio source attached to &lt;Object&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>203</Id>
          <Types>
            <Type>AudioSource</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return </Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.audio;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Play &lt;Audio Clip&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Play &lt;Audio Clip&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>204</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>Audio Clip</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Audio</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEFunctions.PlayClip(</Literal>
              <Scope data="ARGUMENT" ref="Audio Clip">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, transform.position);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Set &lt;Object&gt;&apos;s x position to &lt;x&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Set &lt;Object&gt;&apos;s x position to &lt;x&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>209</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>x</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.transform.position.x = </Literal>
              <Scope data="ARGUMENT" ref="x">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Set &lt;Object&gt;&apos;s y position to &lt;y&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Set &lt;Object&gt;&apos;s y position to &lt;y&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>210</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>y</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.transform.position.y = </Literal>
              <Scope data="ARGUMENT" ref="y">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Set &lt;Object&gt;&apos;s z position to &lt;z&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Set &lt;Object&gt;&apos;s z position to &lt;z&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>211</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>z</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.transform.position.z = </Literal>
              <Scope data="ARGUMENT" ref="z">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>a clone of &lt;Object&gt; created at &lt;Game Object&gt;&apos;s current location</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>a clone of &lt;Object&gt; created at &lt;Game Object&gt;&apos;s current location</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>213</Id>
          <Types>
            <Type>GameObject</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Game Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
                <Type>Prefab</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return Instantiate(</Literal>
              <Scope data="argument" ref="Object">
                <Fragment data="name"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Game Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.transform.position, </Literal>
              <Scope data="ARGUMENT" ref="Game Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.transform.rotation);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Object&gt;&apos;s x position</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Object&gt;&apos;s x position</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>214</Id>
          <Types>
            <Type>float</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return </Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.transform.position.x;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Object&gt;&apos;s y position</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Object&gt;&apos;s y position</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>215</Id>
          <Types>
            <Type>float</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return </Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.transform.position.y;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Object&gt;&apos;s z position</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Object&gt;&apos;s z position</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>216</Id>
          <Types>
            <Type>float</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return </Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.transform.position.z;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Load scene &lt;Level&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Load scene &lt;Level&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>217</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>Level</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Scene</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>Application.LoadLevel(</Literal>
              <Scope data="ARGUMENT" ref="Level">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>the horizontal center of the screen</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>the horizontal center of the screen</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>220</Id>
          <Types>
            <Type>float</Type>
          </Types>
          <Code>
            <Line>
              <Literal>return Screen.width / 2;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>the vertical center of the screen</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>the vertical center of the screen</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>221</Id>
          <Types>
            <Type>float</Type>
          </Types>
          <Code>
            <Line>
              <Literal>return Screen.height / 2;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Exit the application</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Exit the application</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>222</Id>
          <Types/>
          <Code>
            <Line>
              <Literal>Application.Quit();</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Open website at &lt;URL&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Open website at &lt;URL&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>223</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>URL</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>String</Type>
              </Types>
              <Binding flavour="constant">
                <Type>String</Type>
                <Value></Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>Application.OpenURL(</Literal>
              <Scope data="ARGUMENT" ref="URL">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Draw a box on &lt;GUI&gt; at &lt;x&gt;, &lt;y&gt; that is &lt;Width&gt; wide and &lt;Height&gt; tall with the text &lt;Text&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Draw a box on &lt;GUI&gt; at &lt;x&gt;, &lt;y&gt; that is &lt;Width&gt; wide and &lt;Height&gt; tall with the text &lt;Text&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>224</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>x</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>y</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Width</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Height</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Text</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>String</Type>
              </Types>
              <Binding flavour="constant">
                <Type>String</Type>
                <Value></Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>GUI</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GUI</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>GUI.Box(Rect(</Literal>
              <Scope data="ARGUMENT" ref="x">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="y">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Width">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Height">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>), </Literal>
              <Scope data="ARGUMENT" ref="Text">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Limit the &lt;Object&gt;&apos;s x position between &lt;Min&gt; and &lt;Max&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Limit the &lt;Object&gt;&apos;s x position between &lt;Min&gt; and &lt;Max&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>227</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Min</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Max</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.transform.position.x = Mathf.Clamp(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.transform.position.x, </Literal>
              <Scope data="ARGUMENT" ref="Min">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Max">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Limit the &lt;Object&gt;&apos;s y position between &lt;Min&gt; and &lt;Max&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Limit the &lt;Object&gt;&apos;s y position between &lt;Min&gt; and &lt;Max&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>228</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Min</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Max</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.transform.position.y = Mathf.Clamp(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.transform.position.y, </Literal>
              <Scope data="ARGUMENT" ref="Min">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Max">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Limit the &lt;Object&gt;&apos;s z position between &lt;Min&gt; and &lt;Max&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Limit the &lt;Object&gt;&apos;s z position between &lt;Min&gt; and &lt;Max&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>229</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Min</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Max</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.transform.position.z = Mathf.Clamp(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.transform.position.z, </Literal>
              <Scope data="ARGUMENT" ref="Min">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Max">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Set &lt;GUI&gt; foreground colour to RGB values &lt;Red&gt;, &lt;Green&gt;, &lt;Blue&gt; </Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Set &lt;GUI&gt; foreground colour to RGB values &lt;Red&gt;, &lt;Green&gt;, &lt;Blue&gt; </Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>230</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>Red</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Green</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Blue</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>GUI</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GUI</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>GUI.color = Color( </Literal>
              <Scope data="ARGUMENT" ref="Red">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Green">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Blue">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Set &lt;GUI&gt; background colour to RGB values &lt;Red&gt;, &lt;Green&gt;, &lt;Blue&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Set &lt;GUI&gt; background colour to RGB values &lt;Red&gt;, &lt;Green&gt;, &lt;Blue&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>231</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>Red</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Green</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Blue</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>GUI</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GUI</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>GUI.backgroundColor = Color(</Literal>
              <Scope data="ARGUMENT" ref="Red">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Green">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Blue">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Set &lt;GUI&gt; text colour to RGB values &lt;Red&gt;, &lt;Green&gt;, &lt;Blue&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Set &lt;GUI&gt; text colour to RGB values &lt;Red&gt;, &lt;Green&gt;, &lt;Blue&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>232</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>Red</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Green</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Blue</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>GUI</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GUI</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>GUI.contentColor = Color(</Literal>
              <Scope data="ARGUMENT" ref="Red">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Green">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Blue">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>if &lt;GUI&gt; has changed</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>if &lt;GUI&gt; has changed</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>233</Id>
          <Types>
            <Type>question</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>GUI</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GUI</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return GUI.changed;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Move &lt;Object&gt; &lt;x&gt; rightwards, &lt;y&gt; upwards, and &lt;z&gt; forwards</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Move &lt;Object&gt; &lt;x&gt; rightwards, &lt;y&gt; upwards, and &lt;z&gt; forwards</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>235</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>x</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>y</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>z</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>var deltaTime : float = Time.deltaTime;</Literal>
            </Line>
            <Line>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.transform.Translate(</Literal>
              <Scope data="ARGUMENT" ref="x">
                <Fragment data="NAME"/>
              </Scope>
              <Literal> * deltaTime, </Literal>
              <Scope data="ARGUMENT" ref="y">
                <Fragment data="NAME"/>
              </Scope>
              <Literal> * deltaTime, </Literal>
              <Scope data="ARGUMENT" ref="z">
                <Fragment data="NAME"/>
              </Scope>
              <Literal> * deltaTime);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Rotate &lt;Object&gt; &lt;x&gt; rightwards, &lt;y&gt; upwards, and &lt;z&gt; forwards</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Rotate &lt;Object&gt; &lt;x&gt; rightwards, &lt;y&gt; upwards, and &lt;z&gt; forwards</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>236</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>x</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>y</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>z</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>var deltaTime : float = Time.deltaTime;</Literal>
            </Line>
            <Line>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.transform.Rotate(</Literal>
              <Scope data="ARGUMENT" ref="x">
                <Fragment data="NAME"/>
              </Scope>
              <Literal> * deltaTime,</Literal>
              <Scope data="ARGUMENT" ref="y">
                <Fragment data="NAME"/>
              </Scope>
              <Literal> * deltaTime,</Literal>
              <Scope data="ARGUMENT" ref="z">
                <Fragment data="NAME"/>
              </Scope>
              <Literal> * deltaTime);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Move &lt;Object&gt; at horizontal speed &lt;x&gt; and vertical speed &lt;y&gt; based on WASD and arrow key input</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Move &lt;Object&gt; at horizontal speed &lt;x&gt; and vertical speed &lt;y&gt; based on WASD and arrow key input</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>237</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>x</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>y</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>var transV : float = Input.GetAxis(&quot;Vertical&quot;) * Time.deltaTime * </Literal>
              <Scope data="ARGUMENT" ref="y">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
            <Line>
              <Literal>var transH : float = Input.GetAxis(&quot;Horizontal&quot;) * Time.deltaTime * </Literal>
              <Scope data="ARGUMENT" ref="x">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
            <Line>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.transform.Translate(transH, transV, 0);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>the subject of this cause</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>the subject of this cause</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>239</Id>
          <Types>
            <Type>GameObject</Type>
          </Types>
          <Code>
            <Line>
              <Literal>return this.gameObject;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Set &lt;Object&gt;&apos;s tag to &lt;Tag&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Set &lt;Object&gt;&apos;s tag to &lt;Tag&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>240</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Tag</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>String</Type>
              </Types>
              <Binding flavour="constant">
                <Type>String</Type>
                <Value></Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.transform.tag = </Literal>
              <Scope data="ARGUMENT" ref="Tag">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>if &lt;Object&gt; has tag &lt;Tag&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>if &lt;Object&gt; has tag &lt;Tag&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>241</Id>
          <Types>
            <Type>question</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Tag</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>String</Type>
              </Types>
              <Binding flavour="constant">
                <Type>String</Type>
                <Value></Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return </Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.tag == </Literal>
              <Scope data="ARGUMENT" ref="Tag">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>a Text Field on &lt;GUI&gt; at &lt;x&gt;, &lt;y&gt; that is &lt;Width&gt; wide and &lt;Height&gt; tall with default text &lt;Text&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>a Text Field on &lt;GUI&gt; at &lt;x&gt;, &lt;y&gt; that is &lt;Width&gt; wide and &lt;Height&gt; tall with default text &lt;Text&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>242</Id>
          <Types>
            <Type>String</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>x</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>y</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Width</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Height</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Text</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>String</Type>
              </Types>
              <Binding flavour="constant">
                <Type>String</Type>
                <Value></Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>GUI</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GUI</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return GUI.TextField(Rect(</Literal>
              <Scope data="ARGUMENT" ref="x">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="y">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Width">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Height">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>), </Literal>
              <Scope data="ARGUMENT" ref="Text">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>a Password Field on &lt;GUI&gt; at &lt;x&gt;, &lt;y&gt; that is &lt;Width&gt; wide and &lt;Height&gt; tall with max length &lt;Length&gt; and default Text &lt;Text&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>a Password Field on &lt;GUI&gt; at &lt;x&gt;, &lt;y&gt; that is &lt;Width&gt; wide and &lt;Height&gt; tall with max length &lt;Length&gt; and default Text &lt;Text&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>243</Id>
          <Types>
            <Type>String</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>x</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>y</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Width</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Height</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Length</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Text</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>String</Type>
              </Types>
              <Binding flavour="constant">
                <Type>String</Type>
                <Value></Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>GUI</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GUI</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return GUI.PasswordField(Rect(</Literal>
              <Scope data="ARGUMENT" ref="x">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="y">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Width">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Height">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>), </Literal>
              <Scope data="ARGUMENT" ref="Text">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, &quot;*&quot;[0], </Literal>
              <Scope data="ARGUMENT" ref="Length">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>a Text Area on &lt;GUI&gt; at &lt;x&gt;, &lt;y&gt; that is &lt;Width&gt; wide and &lt;Height&gt; tall with the default text &lt;Text&gt; and a character limit of &lt;Limit&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>a Text Area on &lt;GUI&gt; at &lt;x&gt;, &lt;y&gt; that is &lt;Width&gt; wide and &lt;Height&gt; tall with the default text &lt;Text&gt; and a character limit of &lt;Limit&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>244</Id>
          <Types>
            <Type>String</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>x</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>y</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Width</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Height</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Text</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>String</Type>
              </Types>
              <Binding flavour="constant">
                <Type>String</Type>
                <Value></Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Limit</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>GUI</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GUI</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return GUI.TextArea(Rect(</Literal>
              <Scope data="ARGUMENT" ref="x">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="y">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Width">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Height">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>), </Literal>
              <Scope data="ARGUMENT" ref="Text">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Limit">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Set the next &lt;GUI&gt; control name to &lt;Name&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Set the next &lt;GUI&gt; control name to &lt;Name&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>245</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>Name</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>String</Type>
              </Types>
              <Binding flavour="constant">
                <Type>String</Type>
                <Value></Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>GUI</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GUI</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>GUI.SetNextControlName(</Literal>
              <Scope data="ARGUMENT" ref="Name">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>the name of the current focused &lt;GUI&gt; control</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>the name of the current focused &lt;GUI&gt; control</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>246</Id>
          <Types>
            <Type>String</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>GUI</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GUI</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return GUI.GetNameOfFocusedControl();</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Move keyboard focus to a &lt;GUI&gt; control with the name &lt;Name&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Move keyboard focus to a &lt;GUI&gt; control with the name &lt;Name&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>247</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>Name</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>String</Type>
              </Types>
              <Binding flavour="constant">
                <Type>String</Type>
                <Value></Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>GUI</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GUI</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>GUI.FocusControl(</Literal>
              <Scope data="ARGUMENT" ref="Name">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>a horizontal slider on &lt;GUI&gt; at &lt;x&gt;, &lt;y&gt; that is &lt;Width&gt; wide and &lt;Height&gt; tall with a left value of &lt;Lower Value&gt; and a right value of &lt;Upper Value&gt; that starts at value &lt;Value&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>a horizontal slider on &lt;GUI&gt; at &lt;x&gt;, &lt;y&gt; that is &lt;Width&gt; wide and &lt;Height&gt; tall with a left value of &lt;Lower Value&gt; and a right value of &lt;Upper Value&gt; that starts at value &lt;Value&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>248</Id>
          <Types>
            <Type>float</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>x</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>y</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Width</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Height</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Lower Value</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Upper Value</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Value</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>GUI</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GUI</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return GUI.HorizontalSlider(Rect(</Literal>
              <Scope data="ARGUMENT" ref="x">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="y">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Width">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Height">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>), </Literal>
              <Scope data="ARGUMENT" ref="Value">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Lower Value">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Upper Value">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>a vertical slider on &lt;GUI&gt; at &lt;x&gt;, &lt;y&gt; that is &lt;Width&gt; wide and &lt;Height&gt; tall with a lower value of &lt;Lower Value&gt; and a upper value of &lt;Upper Value&gt; that starts at value &lt;Value&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>a vertical slider on &lt;GUI&gt; at &lt;x&gt;, &lt;y&gt; that is &lt;Width&gt; wide and &lt;Height&gt; tall with a lower value of &lt;Lower Value&gt; and a upper value of &lt;Upper Value&gt; that starts at value &lt;Value&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>249</Id>
          <Types>
            <Type>float</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>x</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>y</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Width</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Height</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Lower Value</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Upper Value</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Value</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>GUI</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GUI</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return GUI.VerticalSlider(Rect(</Literal>
              <Scope data="ARGUMENT" ref="x">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="y">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Width">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Height">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>), </Literal>
              <Scope data="ARGUMENT" ref="Value">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Upper Value">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Lower Value">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>a horizontal scrollbar on &lt;GUI&gt; at &lt;x&gt;, &lt;y&gt; that is &lt;Width&gt; wide and &lt;Height&gt; tall with a left value of &lt;Lower Value&gt; and a right value of &lt;Upper Value&gt; that starts at value &lt;Value&gt; and has a visibility of size &lt;Size&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>a horizontal scrollbar on &lt;GUI&gt; at &lt;x&gt;, &lt;y&gt; that is &lt;Width&gt; wide and &lt;Height&gt; tall with a left value of &lt;Lower Value&gt; and a right value of &lt;Upper Value&gt; that starts at value &lt;Value&gt; and has a visibility of size &lt;Size&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>250</Id>
          <Types>
            <Type>float</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>x</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>y</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Width</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Height</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Lower Value</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Upper Value</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Value</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Size</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>GUI</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GUI</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return GUI.HorizontalScrollbar(Rect(</Literal>
              <Scope data="ARGUMENT" ref="x">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="y">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Width">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Height">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>), </Literal>
              <Scope data="ARGUMENT" ref="Value">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Size">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Lower Value">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Upper Value">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>a vertical scrollbar on &lt;GUI&gt; at &lt;x&gt;, &lt;y&gt; that is &lt;Width&gt; wide and &lt;Height&gt; tall with a lower value of &lt;Lower Value&gt; and a upper value of &lt;Upper Value&gt; that starts at value &lt;Value&gt; and has a visibility of size &lt;Size&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>a vertical scrollbar on &lt;GUI&gt; at &lt;x&gt;, &lt;y&gt; that is &lt;Width&gt; wide and &lt;Height&gt; tall with a lower value of &lt;Lower Value&gt; and a upper value of &lt;Upper Value&gt; that starts at value &lt;Value&gt; and has a visibility of size &lt;Size&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>251</Id>
          <Types>
            <Type>float</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>x</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>y</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Width</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Height</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Lower Value</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Upper Value</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Value</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Size</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>GUI</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GUI</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return GUI.HorizontalScrollbar(Rect(</Literal>
              <Scope data="ARGUMENT" ref="x">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="y">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Width">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Height">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>), </Literal>
              <Scope data="ARGUMENT" ref="Value">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Size">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Upper Value">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Lower Value">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>the Game Object created with this &lt;Prefab&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>the Game Object created with this &lt;Prefab&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>205</Id>
          <Types>
            <Type>GameObject</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Prefab</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Prefab</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return PrefabUtility.InstantiatePrefab(</Literal>
              <Scope data="ARGUMENT" ref="Prefab">
                <Fragment data="NAME"/>
              </Scope>
              <Literal> as GameObject) as GameObject;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Move &lt;Object&gt; &lt;x&gt; rightwards, &lt;y&gt; upwards, and &lt;z&gt; forwards for &lt;Seconds&gt; seconds</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Move &lt;Object&gt; &lt;x&gt; rightwards, &lt;y&gt; upwards, and &lt;z&gt; forwards for &lt;Seconds&gt; seconds</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>253</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>x</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>y</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>z</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Seconds</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>var savedTime : float;</Literal>
            </Line>
            <Line>
              <Literal>savedTime = Time.time;</Literal>
            </Line>
            <Line>
              <Literal>if (Time.time - savedTime &lt;= </Literal>
              <Scope data="ARGUMENT" ref="Seconds">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>) {</Literal>
            </Line>
            <Indent>
              <Line>
                <Scope data="ARGUMENT" ref="Object">
                  <Fragment data="NAME"/>
                </Scope>
                <Literal>.transform.Translate(</Literal>
                <Scope data="ARGUMENT" ref="x">
                  <Fragment data="NAME"/>
                </Scope>
                <Literal> * Time.deltaTime, </Literal>
                <Scope data="ARGUMENT" ref="y">
                  <Fragment data="NAME"/>
                </Scope>
                <Literal> * Time.deltaTime, </Literal>
                <Scope data="ARGUMENT" ref="z">
                  <Fragment data="NAME"/>
                </Scope>
                <Literal>* Time.deltaTime);</Literal>
              </Line>
            </Indent>
            <Line>
              <Literal>};</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Remember &lt;Question&gt; as &lt;Key&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Remember &lt;Question&gt; as &lt;Key&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>254</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>Question</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>question</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Key</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>String</Type>
              </Types>
              <Binding flavour="constant">
                <Type>String</Type>
                <Value></Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEVariable.PutBoolean(</Literal>
              <Scope data="ARGUMENT" ref="Key">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Question">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>remembered &lt;Key&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>remembered &lt;Key&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>255</Id>
          <Types>
            <Type>question</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Key</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>String</Type>
              </Types>
              <Binding flavour="constant">
                <Type>String</Type>
                <Value></Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return SEVariable.GetBoolean(</Literal>
              <Scope data="ARGUMENT" ref="Key">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>a clone of &lt;Object&gt; created at &lt;Position&gt; </Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>a clone of &lt;Object&gt; created at &lt;Position&gt; </Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>256</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Prefab</Type>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Position</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Vector3</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>Instantiate(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Position">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, Quaternion.identity);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>if the ray casted at &lt;Position&gt; towards &lt;Direction&gt; that is &lt;Distance&gt; long collided with an object</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>if the ray casted at &lt;Position&gt; towards &lt;Direction&gt; that is &lt;Distance&gt; long collided with an object</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>259</Id>
          <Types>
            <Type>question</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Position</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Vector3</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Direction</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Vector3</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Distance</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return Physics.Raycast(</Literal>
              <Scope data="ARGUMENT" ref="Position">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Direction">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Distance">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>if there is a collider with the invisible line between start position &lt;Start&gt; and end position &lt;End&gt;</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>if there is a collider with the invisible line between start position &lt;Start&gt; and end position &lt;End&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>261</Id>
          <Types>
            <Type>question</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Start</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Vector3</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>End</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Vector3</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return Physics.Linecast(</Literal>
              <Scope data="ARGUMENT" ref="Start">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="End">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Remove &lt;Object&gt;&apos;s parent</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Remove &lt;Object&gt;&apos;s parent</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>262</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.transform.parent = null;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Play &lt;Audio Clip&gt; at &lt;Position&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels>
        <Label></Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Play &lt;Audio Clip&gt; at &lt;Position&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>263</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>Audio Clip</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Audio</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Position</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Vector3</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEFunctions.PlayClip(</Literal>
              <Scope data="ARGUMENT" ref="Audio Clip">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Position">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Start &lt;Dialogue&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Start &lt;Dialogue&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>265</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>Dialogue</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>Dialogue</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEDialogue.StartDialogue(</Literal>
              <Scope data="ARGUMENT" ref="Dialogue">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Enable&gt; &lt;Dialogue Line&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Enable&gt; &lt;Dialogue Line&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>266</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>Enable</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>EnableDisable</Type>
              </Types>
              <Binding flavour="constant">
                <Type>EnableDisable</Type>
                <Value>false</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Dialogue Line</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>DialogueLine</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEDialogue.SetEnabled(</Literal>
              <Scope data="ARGUMENT" ref="Enable">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>, </Literal>
              <Scope data="ARGUMENT" ref="Dialogue Line">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Disable&gt; &lt;Object&gt;&apos;s collider as a trigger</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Disable&gt; &lt;Object&gt;&apos;s collider as a trigger</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>274</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Disable</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>EnableDisable</Type>
              </Types>
              <Binding flavour="constant">
                <Type>EnableDisable</Type>
                <Value>false</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEGameObject.Get.&lt;Collider&gt;(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).isTrigger =</Literal>
              <Scope data="ARGUMENT" ref="Disable">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[101]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[44]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[48]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[39]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[121]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[47]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[46]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[114]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[70]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[100]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[14]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[120]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[98]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[137]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[69]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[7]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[20]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[99]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[104]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[93]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[122]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[45]"/>
    <ScriptIt>
      <Name>a clone of &lt;Object&gt; created at the subject&apos;s current location</Name>
      <Visible>false</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>a clone of &lt;Object&gt; created at the subject&apos;s current location</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>5</Id>
          <Types>
            <Type>GameObject</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
                <Type>Prefab</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return Instantiate(</Literal>
              <Scope data="argument" ref="Object">
                <Fragment data="name"/>
              </Scope>
              <Literal>, transform.position, transform.rotation);</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[34]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[86]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[68]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[19]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[125]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[38]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[22]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[123]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[18]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[101]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[6]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[130]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[103]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[67]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[90]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[42]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[15]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[40]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[91]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[118]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[59]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[23]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[128]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[127]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[75]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[55]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[43]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[129]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[134]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[49]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[13]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[21]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[89]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[136]"/>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[92]"/>
  </Effects>
  <DescribeIts>
    <DescribeIt>
      <Name>Quotient</Name>
      <Types>
        <Type>float</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[23]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Ray Casted</Name>
      <Types>
        <Type>question</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[2]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[136]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Audio</Name>
      <Types>
        <Type>AudioSource</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[3]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[93]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>y</Name>
      <Types>
        <Type>float</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[4]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[100]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Is Playing</Name>
      <Types>
        <Type>question</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[5]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[49]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Password Field</Name>
      <Types>
        <Type>String</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[6]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[122]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>z Position</Name>
      <Types>
        <Type>float</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[7]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[101]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Random Number</Name>
      <Types>
        <Type>float</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[8]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[46]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Number</Name>
      <Types>
        <Type>float</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[9]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[39]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Clamped Number</Name>
      <Types>
        <Type>float</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[10]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[91]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Vertical Slider Value</Name>
      <Types>
        <Type>float</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[11]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[128]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Distance</Name>
      <Types>
        <Type>float</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[12]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[68]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Vertical Scrollbar Value</Name>
      <Types>
        <Type>float</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[13]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[130]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Button Pressed</Name>
      <Types>
        <Type>question</Type>
      </Types>
      <DescribeItNode>
        <Name>if button</Name>
        <Successors>
          <DescribeItNode>
            <Name>labelled </Name>
            <Successors>
              <DescribeItNode>
                <Name>New Node 40</Name>
                <KnowIt>
                  <Name>Text</Name>
                  <Visible>true</Visible>
                  <Enabled>true</Enabled>
                  <Labels/>
                  <Types>
                    <Type>String</Type>
                  </Types>
                </KnowIt>
                <Successors>
                  <DescribeItNode>
                    <Name>on screen at</Name>
                    <Successors>
                      <DescribeItNode>
                        <Name>specific position</Name>
                        <Successors>
                          <DescribeItNode>
                            <Name>is</Name>
                            <Successors>
                              <DescribeItNode>
                                <Name>held down</Name>
                                <Successors/>
                              </DescribeItNode>
                              <DescribeItNode>
                                <Name>toggled</Name>
                                <Successors/>
                              </DescribeItNode>
                              <DescribeItNode>
                                <Name>clicked</Name>
                                <Successors/>
                              </DescribeItNode>
                            </Successors>
                          </DescribeItNode>
                        </Successors>
                      </DescribeItNode>
                      <DescribeItNode>
                        <Name>automatic position</Name>
                        <Successors>
                          <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
                        </Successors>
                      </DescribeItNode>
                    </Successors>
                  </DescribeItNode>
                </Successors>
              </DescribeItNode>
            </Successors>
          </DescribeItNode>
          <DescribeItNode>
            <Name>with image </Name>
            <Successors>
              <DescribeItNode>
                <Name>Image</Name>
                <KnowIt>
                  <Name>Image</Name>
                  <Visible>true</Visible>
                  <Enabled>true</Enabled>
                  <Labels/>
                  <Types>
                    <Type>Image</Type>
                  </Types>
                </KnowIt>
                <Successors>
                  <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
                </Successors>
              </DescribeItNode>
            </Successors>
          </DescribeItNode>
        </Successors>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode[2]"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode[2]/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode[3]"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[75]"/>
        </Entry>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode[2]"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode[2]/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode[2]"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[79]"/>
        </Entry>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode[2]"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode[2]/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode[2]"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode[3]"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[76]"/>
        </Entry>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode[3]"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[9]"/>
        </Entry>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode[2]"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode[2]"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[78]"/>
        </Entry>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode[2]"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode[3]"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[74]"/>
        </Entry>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode[2]"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[84]"/>
        </Entry>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode[2]"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[77]"/>
        </Entry>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode[2]"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode[2]/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode[2]"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode[2]"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[80]"/>
        </Entry>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode[2]"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode[2]/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode[2]"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[84]"/>
        </Entry>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[81]"/>
        </Entry>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode[2]"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode[2]/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[14]/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode/Successors/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[83]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Question</Name>
      <Types>
        <Type>question</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[15]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[134]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Positions Equal</Name>
      <Types>
        <Type>question</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[16]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[70]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Combined Text</Name>
      <Types>
        <Type>String</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[17]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[48]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Input Axis</Name>
      <Types>
        <Type>float</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[18]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[86]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Has Failed</Name>
      <Types>
        <Type>question</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[19]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[15]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Focused GUI Control</Name>
      <Types>
        <Type>String</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[20]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[125]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Mouse Button Clicked</Name>
      <Types>
        <Type>question</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[21]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[7]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Number</Name>
      <Types>
        <Type>float</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[22]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[90]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>z</Name>
      <Types>
        <Type>float</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[23]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[101]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>z</Name>
      <Types>
        <Type>float</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[24]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[44]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Difference</Name>
      <Types>
        <Type>float</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[25]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[21]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Is Active</Name>
      <Types>
        <Type>question</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[26]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[13]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Sum</Name>
      <Types>
        <Type>float</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[27]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[20]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Screen Height</Name>
      <Types>
        <Type>float</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[28]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[19]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Screen Horizontal Center</Name>
      <Types>
        <Type>float</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[29]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[103]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>x</Name>
      <Types>
        <Type>float</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[30]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[99]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Mouse Button Pressed</Name>
      <Types>
        <Type>question</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[31]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[6]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Horizontal Scrollbar Value</Name>
      <Types>
        <Type>float</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[32]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[129]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Horizontal Slider Value</Name>
      <Types>
        <Type>float</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[33]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[127]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Object Has Tag</Name>
      <Types>
        <Type>question</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[34]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[120]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Position</Name>
      <Types>
        <Type>Vector3</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[35]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[67]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Line Casted</Name>
      <Types>
        <Type>question</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[36]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[137]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Text Field</Name>
      <Types>
        <Type>String</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[37]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[121]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Angle</Name>
      <Types>
        <Type>float</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[38]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[69]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Product</Name>
      <Types>
        <Type>float</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[39]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[22]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Text</Name>
      <Types>
        <Type>String</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[40]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[47]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Game Object</Name>
      <Types>
        <Type>GameObject</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[41]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[40]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Name</Name>
      <Types>
        <Type>String</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[42]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[55]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Subject</Name>
      <Types>
        <Type>GameObject</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[43]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[118]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Text</Name>
      <Types>
        <Type>String</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[44]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[38]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>y</Name>
      <Types>
        <Type>float</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[45]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[43]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Key Pressed</Name>
      <Types>
        <Type>question</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[46]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[92]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Objects Equal</Name>
      <Types>
        <Type>question</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[47]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[34]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Number Comparison</Name>
      <Types>
        <Type>question</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[48]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[59]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Multi-line Text Field</Name>
      <Types>
        <Type>String</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[49]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[123]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Screen Width</Name>
      <Types>
        <Type>float</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[50]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[18]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Clone</Name>
      <Types>
        <Type>GameObject</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[51]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[98]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>GUI Changed</Name>
      <Types>
        <Type>question</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[52]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[114]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Position</Name>
      <Types>
        <Type>Vector3</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[53]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[45]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Screen Vertical Center</Name>
      <Types>
        <Type>float</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[54]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[104]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Delta Time</Name>
      <Types>
        <Type>float</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[55]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[89]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Has Succeeded</Name>
      <Types>
        <Type>question</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[56]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[14]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>x</Name>
      <Types>
        <Type>float</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[57]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[42]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
  </DescribeIts>
  <ControlIts>
    <ControlIt control="DELAY">
      <Name>After &lt;Number&gt; seconds</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>After &lt;Number&gt; seconds</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>3</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Number</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="delayItChildren"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ControlIt>
    <ControlIt control="REPEAT">
      <Name>Repeat the following &lt;Number&gt; times</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Repeat the following &lt;Number&gt; times</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>4</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Number</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="controlItChildren"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ControlIt>
    <ControlIt control="BLOCK">
      <Name>Create a &lt;GUI&gt; Group at position &lt;x&gt;, &lt;y&gt; that is &lt;Width&gt; wide and &lt;Height&gt; tall</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Create a &lt;GUI&gt; Group at position &lt;x&gt;, &lt;y&gt; that is &lt;Width&gt; wide and &lt;Height&gt; tall</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>225</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>x</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>y</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Width</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Height</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>GUI</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GUI</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="GUIGroupChildren"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ControlIt>
    <ControlIt control="BLOCK">
      <Name>Create a Scroll View on &lt;GUI&gt; at position &lt;x&gt;, &lt;y&gt; that is &lt;Width&gt; wide and &lt;Height&gt; tall, with a content view relative to the scroll view at &lt;Content x&gt;, &lt;Content y&gt; that is &lt;Content Width&gt; wide and &lt;Content Height&gt; tall, scrolled to the initial position &lt;Position x&gt;, &lt;Position y&gt;</Name>
      <Visible>true</Visible>
      <Enabled>true</Enabled>
      <Labels/>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Create a Scroll View on &lt;GUI&gt; at position &lt;x&gt;, &lt;y&gt; that is &lt;Width&gt; wide and &lt;Height&gt; tall, with a content view relative to the scroll view at &lt;Content x&gt;, &lt;Content y&gt; that is &lt;Content Width&gt; wide and &lt;Content Height&gt; tall, scrolled to the initial position &lt;Position x&gt;, &lt;Position y&gt;</Name>
          <Visible>true</Visible>
          <Enabled>true</Enabled>
          <Labels/>
          <Id>225</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>x</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>y</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Width</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Height</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>GUI</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>GUI</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Content x</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Content y</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Content Width</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Content Height</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Position x</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
            <KnowIt>
              <Name>Position y</Name>
              <Visible>true</Visible>
              <Enabled>true</Enabled>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
              <Binding flavour="constant">
                <Type>float</Type>
                <Value>0.0</Value>
              </Binding>
            </KnowIt>
          </Parameters>
          <Code>
            <FormatRef data="NONE" ref="ScrollViewChildren"/>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ControlIt>
  </ControlIts>
  <TypeConverters/>
</LibraryModel>