<LibraryModel name="A* Pathfinding Library" author="ScriptEase Team">
  <Types/>
  <Slots defaultFormat="SECause">
  	<Slot format="UnityCause">
      <Name>TargetReached</Name>
      <Keyword>TargetReached</Keyword>
      <Condition>Start</Condition>
      <Parameters/>
      <Implicits/>
    </Slot>
  </Slots>
  <Causes>
    <CauseIt>
      <Name>When &lt;subject&gt; reaches its target</Name>
      <Visible>true</Visible>
      <Labels/>
      <Children>
        <StoryComponentContainer>
          <Name>&lt;#currentStoryPoint&gt; Active:</Name>
          <Visible>true</Visible>
          <Labels/>
          <Children/>
        </StoryComponentContainer>
        <StoryComponentContainer>
          <Name>&lt;#currentStoryPoint&gt; Inactive:</Name>
          <Visible>true</Visible>
          <Labels/>
          <Children/>
        </StoryComponentContainer>
        <StoryComponentContainer>
          <Name>Always:</Name>
          <Visible>true</Visible>
          <Labels/>
          <Children/>
        </StoryComponentContainer>
      </Children>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>When &lt;subject&gt; reaches its target</Name>
          <Visible>true</Visible>
          <Labels/>
          <Subject>subject</Subject>
          <Slot>TargetReached</Slot>
          <Id>15</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>subject</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
          	  <Line>
          	  	<Literal>SEPath.GetPath(</Literal>
              	<Scope data="ARGUMENT" ref="subject">
                	<Fragment data="NAME"/>
              	</Scope>
          	    <Literal>).setOnTargetReached(function(){</Literal>
              </Line>
              <Indent>
              	<FormatRef data="NONE" ref="children"/>
              </Indent>
              <Line>
              	<Literal>});</Literal>
              </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </CauseIt>
  </Causes>
  <Effects>
    <ScriptIt>
      <Name>&lt;Object&gt; walks a path to &lt;Other Object&gt;</Name>
      <Visible>true</Visible>
      <Labels>
        <Label>NOW</Label>
        <Label>A*</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Object&gt; walks a path to &lt;Other Object&gt;</Name>
          <Visible>true</Visible>
          <Labels/>
          <Id>2</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Other Object</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEPath.GetPath(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).target = </Literal>
              <Scope data="ARGUMENT" ref="Other Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>.transform;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Set &lt;Object&gt;&apos;s path walking speed to &lt;Speed&gt;</Name>
      <Visible>true</Visible>
      <Labels>
        <Label>NOW</Label>
        <Label>A*</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Set &lt;Object&gt;&apos;s path walking speed to &lt;Speed&gt;</Name>
          <Visible>true</Visible>
          <Labels/>
          <Id>3</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Speed</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEPath.GetPath(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).speed = </Literal>
              <Scope data="ARGUMENT" ref="Speed">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Object&gt; attempts to find its path again</Name>
      <Visible>true</Visible>
      <Labels>
        <Label>NOW</Label>
        <Label>A*</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Object&gt; attempts to find its path again</Name>
          <Visible>true</Visible>
          <Labels/>
          <Id>5</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEPath.GetPath(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).StartCoroutine(RepeatTrySearchPath());</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Object&gt; reaches its target at &lt;Distance&gt; from target</Name>
      <Visible>true</Visible>
      <Labels>
        <Label>NOW</Label>
        <Label>A*</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Object&gt; reaches its target at &lt;Distance&gt; from target</Name>
          <Visible>true</Visible>
          <Labels/>
          <Id>6</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Distance</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEPath.GetPath(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).endReachedDistance = </Literal>
              <Scope data="ARGUMENT" ref="Distance">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Object&gt; looks for a new path to its target at a rate of &lt;Rate&gt;</Name>
      <Visible>true</Visible>
      <Labels>
        <Label>NOW</Label>
        <Label>A*</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Object&gt; looks for a new path to its target at a rate of &lt;Rate&gt;</Name>
          <Visible>true</Visible>
          <Labels/>
          <Id>7</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Rate</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEPath.GetPath(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).repathRate = </Literal>
              <Scope data="ARGUMENT" ref="Rate">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Allow&gt; &lt;Object&gt; to look for a new path to its target</Name>
      <Visible>true</Visible>
      <Labels>
        <Label>NOW</Label>
        <Label>A*</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Allow&gt; &lt;Object&gt; to look for a new path to its target</Name>
          <Visible>true</Visible>
          <Labels/>
          <Id>8</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Allow</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>AllowDisallow</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEPath.GetPath(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).canSearch = </Literal>
              <Scope data="ARGUMENT" ref="Allow">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Allow&gt; &lt;Object&gt; to move to its target</Name>
      <Visible>true</Visible>
      <Labels>
        <Label>NOW</Label>
        <Label>A*</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Allow&gt; &lt;Object&gt; to move to its target</Name>
          <Visible>true</Visible>
          <Labels/>
          <Id>9</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Allow</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>AllowDisallow</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEPath.GetPath(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).canMove = </Literal>
              <Scope data="ARGUMENT" ref="Allow">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>Set &lt;Object&gt;&apos;s path turning speed to &lt;Speed&gt;</Name>
      <Visible>true</Visible>
      <Labels>
        <Label>NOW</Label>
        <Label>A*</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>Set &lt;Object&gt;&apos;s path turning speed to &lt;Speed&gt;</Name>
          <Visible>true</Visible>
          <Labels/>
          <Id>10</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Speed</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEPath.GetPath(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).turningSpeed = </Literal>
              <Scope data="ARGUMENT" ref="Speed">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Object&gt; starts to slow down when it is &lt;Distance&gt; from target</Name>
      <Visible>true</Visible>
      <Labels>
        <Label>NOW</Label>
        <Label>A*</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Object&gt; starts to slow down when it is &lt;Distance&gt; from target</Name>
          <Visible>true</Visible>
          <Labels/>
          <Id>11</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Distance</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEPath.GetPath(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).slowdownDistance = </Literal>
              <Scope data="ARGUMENT" ref="Distance">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Object&gt; switches to a new target when it is &lt;Distance&gt; from its current target</Name>
      <Visible>true</Visible>
      <Labels>
        <Label>NOW</Label>
        <Label>A*</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Object&gt; switches to a new target when it is &lt;Distance&gt; from its current target</Name>
          <Visible>true</Visible>
          <Labels/>
          <Id>12</Id>
          <Types>
            <Type>void</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
            <KnowIt>
              <Name>Distance</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>float</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEPath.GetPath(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).pickNextWaypointDist = </Literal>
              <Scope data="ARGUMENT" ref="Distance">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>if &lt;Object&gt; has reached its target</Name>
      <Visible>false</Visible>
      <Labels>
        <Label>A*</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>if &lt;Object&gt; has reached its target</Name>
          <Visible>true</Visible>
          <Labels/>
          <Id>13</Id>
          <Types>
            <Type>question</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return SEPath.GetPath(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).TargetReached;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt>
      <Name>&lt;Object&gt; stops walking to its target</Name>
      <Visible>true</Visible>
      <Labels>
        <Label>NOW</Label>
        <Label>A*</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Object&gt; stops walking to its target</Name>
          <Visible>true</Visible>
          <Labels/>
          <Id>14</Id>
          <Types/>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>SEPath.GetPath(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).target = null;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
    <ScriptIt reference="/LibraryModel/Effects/ScriptIt[11]"/>
    <ScriptIt>
      <Name>&lt;Object&gt;&apos;s path walking speed</Name>
      <Visible>false</Visible>
      <Labels>
        <Label>A*</Label>
      </Labels>
      <Children/>
      <CodeBlocks>
        <CodeBlockSource>
          <Name>&lt;Object&gt;&apos;s path walking speed</Name>
          <Visible>true</Visible>
          <Labels/>
          <Id>16</Id>
          <Types>
            <Type>float</Type>
          </Types>
          <Parameters>
            <KnowIt>
              <Name>Object</Name>
              <Visible>true</Visible>
              <Labels/>
              <Types>
                <Type>GameObject</Type>
              </Types>
            </KnowIt>
          </Parameters>
          <Code>
            <Line>
              <Literal>return SEPath.GetPath(</Literal>
              <Scope data="ARGUMENT" ref="Object">
                <Fragment data="NAME"/>
              </Scope>
              <Literal>).speed;</Literal>
            </Line>
          </Code>
        </CodeBlockSource>
      </CodeBlocks>
    </ScriptIt>
  </Effects>
  <DescribeIts>
    <DescribeIt>
      <Name>Walk Speed</Name>
      <Types>
        <Type>float</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[14]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
    <DescribeIt>
      <Name>Target Reached</Name>
      <Types>
        <Type>question</Type>
      </Types>
      <DescribeItNode>
        <Name>Placeholder Node</Name>
        <Successors/>
      </DescribeItNode>
      <PathMap>
        <Entry>
          <Path>
            <DescribeItNode reference="/LibraryModel/DescribeIts/DescribeIt[2]/DescribeItNode"/>
          </Path>
          <ScriptIt reference="/LibraryModel/Effects/ScriptIt[11]"/>
        </Entry>
      </PathMap>
    </DescribeIt>
  </DescribeIts>
  <ControlIts/>
  <TypeConverters/>
</LibraryModel>