<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE formatdictionary SYSTEM "../../../scriptease2/scriptease/translator/xml/formatdictionary.dtd">
<formatdictionary>
	<name>DefaultStarcraft2FormatDictionary</name>
	<author>ScriptEase</author>
	<validgames>
		<validgame>Starcraft2</validgame>
	</validgames>

	<formats>
		<!-- Any general "[type] [name]" combo -->
		<format id="parameter">
			<fragment data="type" default="void" legalValues="&alphabetic;" />
			<literal>&space;</literal>
			<fragment data="name" legalValues="&cvariable;" />
		</format>
		
		<format id="functionSignature">
			<formatRef ref="parameter" />
			<literal>(</literal>
			<series data="parameters">
			<!-- Parameters are just the type and the name -->
				<formatRef ref="parameter" />
				<separator>,&space;</separator>
			</series>
			<literal>)</literal>
		</format>
		
		<format id="children">
			<!-- Variable declarations>come first -->
			<series data="variables">
				<formatRef ref="variableDeclaration" />
			</series>
				
			<line></line>

			<!-- Definitions (except descriptions) come second -->
			<series data="variables">
				<formatRef ref="variableDefinition" />
			</series>
			
			<line></line>
			
			<!-- Actions and description definitions come last -->
			<series data="actions">
				<formatRef ref="functionCall" />
			</series>
		</format>
		
		<format id="functionDeclaration">
			<line>
				<formatRef ref="functionSignature" />
				<literal>;</literal>
			</line>
		</format>

		<format id="functionDefinition">
			<line>
				<formatRef ref="functionSignature" />
				<literal>{</literal>
			</line>
			
			<indent>
				<formatRef ref="children" />
			</indent>

			<!-- Close the function -->
			<line>
				<literal>}</literal>
			</line>
		</format>
		
		<format id="functionCall">
			<line>
				<fragment data="name" legalValues="&cvariable;" />
				<literal>(</literal>
				<series data="parameters" >
					<formatRef ref="variableCall" />
					<separator>,&space;</separator>
				</series>
				<literal>);</literal>
			</line>
		</format>
		
		<format id="variableDeclaration">
			<line>
				<formatRef ref="parameter" />
				<literal>;</literal>
			</line>
		</format>
		
		<format id="variableDefinition">
			<line>
				<fragment data="name" legalValues="&cvariable;" />
				<literal>&space;=&space;</literal>
				<fragment data="binding" />
				<literal>;</literal>
			</line>
		</format>
		
		<format id="variableCall">
			<fragment data="name" legalValues="&cvariable;" />
		</format>
		
		<format id="conditional">
			<line>
				<literal>if(</literal>
				<fragment data="condition" />
				<literal>){</literal>
			</line>

			<indent>
				<formatRef ref="children" />
			</indent>

			<line>
				<literal>}</literal>
			</line>
		</format>
		
		<format id="file">
			<!-- include files first -->
			<series data="imports" >
				<format id="imports">
					<line>
						<literal>#include &quot;</literal>
						<fragment data="name" />
						<literal>&quot;</literal>
					</line>
				</format>
			</series>
			
			<line></line>

			<!-- Function declarations next -->
			<series data="functions" >
				<formatRef ref="functionDeclaration" />
			</series>
			
			<line></line>

			<!-- main function -->
			<line>			
				<literal>void&space;main()&space;{</literal>
			</line>
			
			<indent>
				<series data="startIts"> 
					<formatRef ref="conditional"/>
				</series>
			</indent>
			
			<line>
				<literal>}</literal>
			</line>

			<!-- Function definitions last -->
			<series data="functions" >
				<formatRef ref="functionDefinition" />
			</series>
			
			<line></line>
		</format>
		
		<format id="singleComment">
			<line>
				<literal>//&space;</literal>
				<fragment data="comment" />
			</line>
		</format>
		
		<format id="blockComment">
			<line>
				<literal>/*</literal>
			</line>
			<series data="commentLines">
				<format id="multiComment">
					<line>
						<literal>&space;*&space;</literal>
						<fragment data="comment" />
					</line>
				</format>
			</series>
			<line>
				<literal>*/</literal>
			</line>
		</format>
	</formats>
	<indentString>
		&tab;
	</indentString>
	<reservedWords>
		<word>if</word>
		<word>else</word>
		<word>return</word>
		<word>for</word>
		<word>while</word>
		<word>do</word>
		<word>struct</word>
		<word>const</word>
		<word>switch</word>
		<word>case</word>
		<word>break</word>
		<word>action</word>
		<word>command</word>
		<word>const</word>
		<word>effect</word>
		<word>event</word>
		<word>float</word>
		<word>int</word>
		<word>itemproperty</word>
		<word>location</word>
		<word>object</word>
		<word>string</word>
		<word>struct</word>
		<word>talent</word>
		<word>vector</word>
		<word>void</word>
	</reservedWords>
</formatdictionary>